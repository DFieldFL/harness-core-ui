{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "CI API Reference"
  },
  "host": "localhost",
  "tags": [
    {
      "name": "ci"
    },
    {
      "name": "partial-yaml-schema"
    },
    {
      "name": "health"
    },
    {
      "name": "delegate2-tasks"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/ci/builds": {
      "get": {
        "tags": ["ci"],
        "summary": "Get builds list",
        "description": "",
        "operationId": "getBuildsOld",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "userIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePageCIBuildResponseDTO"
            }
          }
        }
      }
    },
    "/ci/builds/{buildIdentifier}": {
      "get": {
        "tags": ["ci"],
        "summary": "Gets a build by identifier",
        "description": "",
        "operationId": "getBuild",
        "consumes": ["application/json", "application/yaml"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "buildIdentifier",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCIBuildResponseDTO"
            }
          }
        }
      }
    },
    "/ci/buildHealth": {
      "get": {
        "tags": ["ci"],
        "summary": "Get build health",
        "description": "",
        "operationId": "getBuildHealth",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startInterval",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "endInterval",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDashboardBuildsHealthInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ci/buildExecution": {
      "get": {
        "tags": ["ci"],
        "summary": "Get build execution",
        "description": "",
        "operationId": "getBuildExecution",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startInterval",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "endInterval",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDashboardBuildExecutionInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ci/repositoryBuild": {
      "get": {
        "tags": ["ci"],
        "summary": "Get build getRepositoryBuild",
        "description": "",
        "operationId": "getRepositoryBuild",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startInterval",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "endInterval",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDashboardBuildRepositoryInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ci/getBuilds": {
      "get": {
        "tags": ["ci"],
        "summary": "Get builds",
        "description": "",
        "operationId": "getBuilds",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "top",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDashboardBuildsActiveAndFailedInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ci/execute/{identifier}/run": {
      "post": {
        "tags": ["ci"],
        "summary": "Execute a CI pipeline",
        "description": "",
        "operationId": "executePipeline",
        "consumes": ["application/json", "text/yaml"],
        "produces": ["application/json", "text/yaml"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ci/webhook/trigger/{id}": {
      "post": {
        "tags": ["ci"],
        "operationId": "runPipelineFromTrigger",
        "consumes": ["application/json"],
        "produces": ["application/json", "application/yaml"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/partial-yaml-schema": {
      "get": {
        "tags": ["partial-yaml-schema"],
        "summary": "Get Partial Yaml Schema",
        "description": "",
        "operationId": "getPartialYamlSchema",
        "consumes": ["application/json", "text/yaml", "text/html", "text/plain"],
        "produces": ["application/json", "text/yaml", "text/html", "text/plain"],
        "parameters": [
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": ["account", "org", "project", "unknown"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponsePartialSchemaDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Failure"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health"],
        "summary": "get health for CI service",
        "description": "",
        "operationId": "getCIHealthStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/sample/async/output": {
      "post": {
        "tags": ["delegate2-tasks"],
        "summary": "Create a delegate tasks",
        "description": "",
        "operationId": "asyncTaskOutput",
        "consumes": ["application/json", "text/yaml", "text/html"],
        "produces": ["application/json", "text/yaml", "text/html"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/sample/parked/http": {
      "post": {
        "tags": ["delegate2-tasks"],
        "summary": "Parked task using Delegate 2.0 framework",
        "description": "",
        "operationId": "parkedHttp",
        "consumes": ["application/json", "text/yaml", "text/html"],
        "produces": ["application/json", "text/yaml", "text/html"],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AdviserIssuer": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserAdviserIssuer"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/AdviserIssuer"
        },
        "adviserType": {
          "type": "string",
          "enum": ["UNKNOWN", "NEXT_STEP", "RETRY", "INTERVENTION_WAIT", "END_PLAN", "MARK_SUCCESS", "UNRECOGNIZED"]
        },
        "adviserTypeValue": {
          "type": "integer",
          "format": "int32"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "AdviserIssuerOrBuilder": {
      "type": "object",
      "properties": {
        "adviserType": {
          "type": "string",
          "enum": ["UNKNOWN", "NEXT_STEP", "RETRY", "INTERVENTION_WAIT", "END_PLAN", "MARK_SUCCESS", "UNRECOGNIZED"]
        },
        "adviserTypeValue": {
          "type": "integer",
          "format": "int32"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "AmbianceDTO": {
      "type": "object",
      "properties": {
        "setupAbstractions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "levels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LevelDTO"
          }
        },
        "planExecutionId": {
          "type": "string"
        }
      }
    },
    "AsyncExecutableResponse": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "mode": {
          "type": "string",
          "enum": ["RUNNING_MODE", "APPROVAL_WAITING_MODE", "RESOURCE_WAITING_MODE", "UNRECOGNIZED"]
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserAsyncExecutableResponse"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/AsyncExecutableResponse"
        },
        "logKeysList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logKeysCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsCount": {
          "type": "integer",
          "format": "int32"
        },
        "callbackIdsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "callbackIdsCount": {
          "type": "integer",
          "format": "int32"
        },
        "modeValue": {
          "type": "integer",
          "format": "int32"
        },
        "unitsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "AsyncExecutableResponseOrBuilder": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": ["RUNNING_MODE", "APPROVAL_WAITING_MODE", "RESOURCE_WAITING_MODE", "UNRECOGNIZED"]
        },
        "logKeysList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logKeysCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsCount": {
          "type": "integer",
          "format": "int32"
        },
        "callbackIdsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "callbackIdsCount": {
          "type": "integer",
          "format": "int32"
        },
        "modeValue": {
          "type": "integer",
          "format": "int32"
        },
        "unitsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "ByteString": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "validUtf8": {
          "type": "boolean"
        }
      }
    },
    "CIBuildAuthor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        }
      }
    },
    "CIBuildBranchHook": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "commits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CIBuildCommit"
          }
        }
      }
    },
    "CIBuildCommit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "ownerName": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "ownerEmail": {
          "type": "string"
        },
        "timeStamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CIBuildPRHook": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "link": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "sourceRepo": {
          "type": "string"
        },
        "sourceBranch": {
          "type": "string"
        },
        "targetBranch": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "commits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CIBuildCommit"
          }
        }
      }
    },
    "CIBuildPipeline": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NGTag"
          }
        }
      }
    },
    "CIBuildResponseDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "pipeline": {
          "$ref": "#/definitions/CIBuildPipeline"
        },
        "triggerType": {
          "type": "string"
        },
        "event": {
          "type": "string"
        },
        "author": {
          "$ref": "#/definitions/CIBuildAuthor"
        },
        "branch": {
          "$ref": "#/definitions/CIBuildBranchHook"
        },
        "pullRequest": {
          "$ref": "#/definitions/CIBuildPRHook"
        },
        "graph": {
          "$ref": "#/definitions/OrchestrationGraphDTO"
        }
      }
    },
    "Child": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserChild"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Child"
        },
        "childNodeId": {
          "type": "string"
        },
        "childNodeIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "ChildChainExecutableResponse": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserChildChainExecutableResponse"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/ChildChainExecutableResponse"
        },
        "nextChildId": {
          "type": "string"
        },
        "nextChildIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "previousChildId": {
          "type": "string"
        },
        "previousChildIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "passThroughData": {
          "$ref": "#/definitions/ByteString"
        },
        "lastLink": {
          "type": "boolean"
        },
        "suspend": {
          "type": "boolean"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "ChildChainExecutableResponseOrBuilder": {
      "type": "object",
      "properties": {
        "nextChildId": {
          "type": "string"
        },
        "nextChildIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "previousChildId": {
          "type": "string"
        },
        "previousChildIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "passThroughData": {
          "$ref": "#/definitions/ByteString"
        },
        "lastLink": {
          "type": "boolean"
        },
        "suspend": {
          "type": "boolean"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "ChildExecutableResponse": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserChildExecutableResponse"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/ChildExecutableResponse"
        },
        "childNodeId": {
          "type": "string"
        },
        "childNodeIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "ChildExecutableResponseOrBuilder": {
      "type": "object",
      "properties": {
        "childNodeId": {
          "type": "string"
        },
        "childNodeIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "ChildOrBuilder": {
      "type": "object",
      "properties": {
        "childNodeId": {
          "type": "string"
        },
        "childNodeIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "ChildrenExecutableResponse": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserChildrenExecutableResponse"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/ChildrenExecutableResponse"
        },
        "childrenList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Child"
          }
        },
        "childrenCount": {
          "type": "integer",
          "format": "int32"
        },
        "childrenOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildOrBuilder"
          }
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "ChildrenExecutableResponseOrBuilder": {
      "type": "object",
      "properties": {
        "childrenList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Child"
          }
        },
        "childrenCount": {
          "type": "integer",
          "format": "int32"
        },
        "childrenOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChildOrBuilder"
          }
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "DelegateSelectionLogParams": {
      "type": "object",
      "properties": {
        "delegateId": {
          "type": "string"
        },
        "delegateType": {
          "type": "string"
        },
        "delegateName": {
          "type": "string"
        },
        "delegateHostName": {
          "type": "string"
        },
        "delegateProfileName": {
          "type": "string"
        },
        "conclusion": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "eventTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "profileScopingRulesDetails": {
          "$ref": "#/definitions/ProfileScopingRulesDetails"
        }
      }
    },
    "Descriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "containingType": {
          "$ref": "#/definitions/Descriptor"
        },
        "nestedTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Descriptor"
          }
        },
        "enumTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumDescriptor"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDescriptor"
          }
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDescriptor"
          }
        },
        "oneofs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OneofDescriptor"
          }
        },
        "name": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/MessageOptions"
        },
        "extendable": {
          "type": "boolean"
        }
      }
    },
    "Duration": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "integer",
          "format": "int64"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "zero": {
          "type": "boolean"
        },
        "negative": {
          "type": "boolean"
        },
        "units": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemporalUnit"
          }
        }
      }
    },
    "EdgeList": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EnumDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "containingType": {
          "$ref": "#/definitions/Descriptor"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumValueDescriptor"
          }
        },
        "name": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/EnumOptions"
        }
      }
    },
    "EnumOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserEnumOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/EnumOptions"
        },
        "deprecated": {
          "type": "boolean"
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "allowAlias": {
          "type": "boolean"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "EnumValueDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "type": {
          "$ref": "#/definitions/EnumDescriptor"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "$ref": "#/definitions/EnumValueOptions"
        }
      }
    },
    "EnumValueOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserEnumValueOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/EnumValueOptions"
        },
        "deprecated": {
          "type": "boolean"
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ExecutableResponse": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "task": {
          "$ref": "#/definitions/TaskExecutableResponse"
        },
        "asyncOrBuilder": {
          "$ref": "#/definitions/AsyncExecutableResponseOrBuilder"
        },
        "childOrBuilder": {
          "$ref": "#/definitions/ChildExecutableResponseOrBuilder"
        },
        "childrenOrBuilder": {
          "$ref": "#/definitions/ChildrenExecutableResponseOrBuilder"
        },
        "childChain": {
          "$ref": "#/definitions/ChildChainExecutableResponse"
        },
        "childChainOrBuilder": {
          "$ref": "#/definitions/ChildChainExecutableResponseOrBuilder"
        },
        "taskOrBuilder": {
          "$ref": "#/definitions/TaskExecutableResponseOrBuilder"
        },
        "taskChain": {
          "$ref": "#/definitions/TaskChainExecutableResponse"
        },
        "taskChainOrBuilder": {
          "$ref": "#/definitions/TaskChainExecutableResponseOrBuilder"
        },
        "sync": {
          "$ref": "#/definitions/SyncExecutableResponse"
        },
        "syncOrBuilder": {
          "$ref": "#/definitions/SyncExecutableResponseOrBuilder"
        },
        "skipTask": {
          "$ref": "#/definitions/SkipTaskExecutableResponse"
        },
        "skipTaskOrBuilder": {
          "$ref": "#/definitions/SkipTaskExecutableResponseOrBuilder"
        },
        "children": {
          "$ref": "#/definitions/ChildrenExecutableResponse"
        },
        "responseCase": {
          "type": "string",
          "enum": [
            "ASYNC",
            "CHILD",
            "CHILDREN",
            "CHILDCHAIN",
            "TASK",
            "TASKCHAIN",
            "SYNC",
            "SKIPTASK",
            "RESPONSE_NOT_SET"
          ]
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserExecutableResponse"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/ExecutableResponse"
        },
        "async": {
          "$ref": "#/definitions/AsyncExecutableResponse"
        },
        "child": {
          "$ref": "#/definitions/ChildExecutableResponse"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "FailureInfoDTO": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "failureTypeList": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EXPIRED",
              "DELEGATE_PROVISIONING",
              "CONNECTIVITY",
              "AUTHENTICATION",
              "VERIFICATION_FAILURE",
              "APPLICATION_ERROR",
              "AUTHORIZATION_ERROR",
              "TIMEOUT_ERROR"
            ]
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "FieldDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "jsonName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "extensionScope": {
          "$ref": "#/definitions/Descriptor"
        },
        "type": {
          "type": "string",
          "enum": [
            "DOUBLE",
            "FLOAT",
            "INT64",
            "UINT64",
            "INT32",
            "FIXED64",
            "FIXED32",
            "BOOL",
            "STRING",
            "GROUP",
            "MESSAGE",
            "BYTES",
            "UINT32",
            "ENUM",
            "SFIXED32",
            "SFIXED64",
            "SINT32",
            "SINT64"
          ]
        },
        "containingType": {
          "$ref": "#/definitions/Descriptor"
        },
        "messageType": {
          "$ref": "#/definitions/Descriptor"
        },
        "containingOneof": {
          "$ref": "#/definitions/OneofDescriptor"
        },
        "enumType": {
          "$ref": "#/definitions/EnumDescriptor"
        },
        "defaultValue": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "repeated": {
          "type": "boolean"
        },
        "javaType": {
          "type": "string",
          "enum": ["INT", "LONG", "FLOAT", "DOUBLE", "BOOLEAN", "STRING", "BYTE_STRING", "ENUM", "MESSAGE"]
        },
        "mapField": {
          "type": "boolean"
        },
        "options": {
          "$ref": "#/definitions/FieldOptions"
        },
        "required": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "liteJavaType": {
          "type": "string",
          "enum": ["INT", "LONG", "FLOAT", "DOUBLE", "BOOLEAN", "STRING", "BYTE_STRING", "ENUM", "MESSAGE"]
        },
        "liteType": {
          "type": "string",
          "enum": [
            "DOUBLE",
            "FLOAT",
            "INT64",
            "UINT64",
            "INT32",
            "FIXED64",
            "FIXED32",
            "BOOL",
            "STRING",
            "GROUP",
            "MESSAGE",
            "BYTES",
            "UINT32",
            "ENUM",
            "SFIXED32",
            "SFIXED64",
            "SINT32",
            "SINT64"
          ]
        },
        "packed": {
          "type": "boolean"
        },
        "packable": {
          "type": "boolean"
        },
        "extension": {
          "type": "boolean"
        }
      }
    },
    "FieldOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserFieldOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/FieldOptions"
        },
        "packed": {
          "type": "boolean"
        },
        "deprecated": {
          "type": "boolean"
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "ctype": {
          "type": "string",
          "enum": ["STRING", "CORD", "STRING_PIECE"]
        },
        "jstype": {
          "type": "string",
          "enum": ["JS_NORMAL", "JS_STRING", "JS_NUMBER"]
        },
        "lazy": {
          "type": "boolean"
        },
        "weak": {
          "type": "boolean"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "FileDescriptor": {
      "type": "object",
      "properties": {
        "messageTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Descriptor"
          }
        },
        "enumTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumDescriptor"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDescriptor"
          }
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDescriptor"
          }
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDescriptor"
          }
        },
        "publicDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDescriptor"
          }
        },
        "name": {
          "type": "string"
        },
        "package": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "options": {
          "$ref": "#/definitions/FileOptions"
        },
        "fullName": {
          "type": "string"
        },
        "syntax": {
          "type": "string",
          "enum": ["UNKNOWN", "PROTO2", "PROTO3"]
        }
      }
    },
    "FileOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserFileOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/FileOptions"
        },
        "javaStringCheckUtf8": {
          "type": "boolean"
        },
        "deprecated": {
          "type": "boolean"
        },
        "phpMetadataNamespace": {
          "type": "string"
        },
        "phpMetadataNamespaceBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "rubyPackage": {
          "type": "string"
        },
        "rubyPackageBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "javaPackage": {
          "type": "string"
        },
        "javaPackageBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "javaOuterClassname": {
          "type": "string"
        },
        "javaOuterClassnameBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "javaMultipleFiles": {
          "type": "boolean"
        },
        "javaGenerateEqualsAndHash": {
          "type": "boolean"
        },
        "optimizeFor": {
          "type": "string",
          "enum": ["SPEED", "CODE_SIZE", "LITE_RUNTIME"]
        },
        "goPackage": {
          "type": "string"
        },
        "goPackageBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "ccGenericServices": {
          "type": "boolean"
        },
        "javaGenericServices": {
          "type": "boolean"
        },
        "pyGenericServices": {
          "type": "boolean"
        },
        "phpGenericServices": {
          "type": "boolean"
        },
        "ccEnableArenas": {
          "type": "boolean"
        },
        "objcClassPrefix": {
          "type": "string"
        },
        "objcClassPrefixBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "csharpNamespace": {
          "type": "string"
        },
        "csharpNamespaceBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "swiftPrefix": {
          "type": "string"
        },
        "swiftPrefixBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "phpClassPrefix": {
          "type": "string"
        },
        "phpClassPrefixBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "phpNamespace": {
          "type": "string"
        },
        "phpNamespaceBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "GraphDelegateSelectionLogParams": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "string"
        },
        "taskName": {
          "type": "string"
        },
        "selectionLogParams": {
          "$ref": "#/definitions/DelegateSelectionLogParams"
        }
      }
    },
    "GraphVertexDTO": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "ambiance": {
          "$ref": "#/definitions/AmbianceDTO"
        },
        "planNodeId": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "endTs": {
          "type": "integer",
          "format": "int64"
        },
        "initialWaitDuration": {
          "$ref": "#/definitions/Duration"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "stepType": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "NO_OP",
            "RUNNING",
            "INTERVENTION_WAITING",
            "TIMED_WAITING",
            "ASYNC_WAITING",
            "TASK_WAITING",
            "DISCONTINUING",
            "PAUSING",
            "QUEUED",
            "SKIPPED",
            "PAUSED",
            "ABORTED",
            "ERRORED",
            "FAILED",
            "EXPIRED",
            "SUSPENDED",
            "SUCCEEDED",
            "IGNORE_FAILED",
            "APPROVAL_WAITING",
            "RESOURCE_WAITING",
            "UNRECOGNIZED"
          ]
        },
        "failureInfo": {
          "$ref": "#/definitions/FailureInfoDTO"
        },
        "skipInfo": {
          "$ref": "#/definitions/SkipInfo"
        },
        "nodeRunInfo": {
          "$ref": "#/definitions/NodeRunInfo"
        },
        "stepParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "mode": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "SYNC",
            "ASYNC",
            "TASK_CHAIN",
            "TASK",
            "CHILD_CHAIN",
            "CHILDREN",
            "CHILD",
            "SKIP",
            "UNRECOGNIZED"
          ]
        },
        "graphDelegateSelectionLogParams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GraphDelegateSelectionLogParams"
          }
        },
        "executableResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutableResponse"
          }
        },
        "interruptHistories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InterruptEffect"
          }
        },
        "outcomes": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "retryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "progressDataMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ProgressData"
            }
          }
        },
        "unitProgresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnitProgress"
          }
        },
        "skipType": {
          "type": "string",
          "enum": ["NOOP", "SKIP_TREE", "SKIP_NODE", "UNRECOGNIZED"]
        },
        "representationStrategy": {
          "type": "string",
          "enum": ["camelCase"]
        }
      }
    },
    "InterruptConfig": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "issuedBy": {
          "$ref": "#/definitions/IssuedBy"
        },
        "configCase": {
          "type": "string",
          "enum": ["RETRYINTERRUPTCONFIG", "CONFIG_NOT_SET"]
        },
        "issuedByOrBuilder": {
          "$ref": "#/definitions/IssuedByOrBuilder"
        },
        "retryInterruptConfig": {
          "$ref": "#/definitions/RetryInterruptConfig"
        },
        "retryInterruptConfigOrBuilder": {
          "$ref": "#/definitions/RetryInterruptConfigOrBuilder"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserInterruptConfig"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/InterruptConfig"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "InterruptEffect": {
      "type": "object",
      "required": ["interruptConfig", "interruptId", "interruptType", "tookEffectAt"],
      "properties": {
        "interruptId": {
          "type": "string"
        },
        "tookEffectAt": {
          "type": "integer",
          "format": "int64"
        },
        "interruptType": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "ABORT",
            "ABORT_ALL",
            "PAUSE",
            "PAUSE_ALL",
            "RESUME",
            "RESUME_ALL",
            "RETRY",
            "IGNORE",
            "WAITING_FOR_MANUAL_INTERVENTION",
            "MARK_FAILED",
            "MARK_SUCCESS",
            "NEXT_STEP",
            "END_EXECUTION",
            "MARK_EXPIRED",
            "CUSTOM_FAILURE",
            "UNRECOGNIZED"
          ]
        },
        "interruptConfig": {
          "$ref": "#/definitions/InterruptConfig"
        }
      }
    },
    "IssuedBy": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserIssuedBy"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/IssuedBy"
        },
        "timeoutIssuerOrBuilder": {
          "$ref": "#/definitions/TimeoutIssuerOrBuilder"
        },
        "issuerCase": {
          "type": "string",
          "enum": ["MANUALISSUER", "ADVISERISSUER", "TIMEOUTISSUER", "ISSUER_NOT_SET"]
        },
        "manualIssuer": {
          "$ref": "#/definitions/ManualIssuer"
        },
        "timeoutIssuer": {
          "$ref": "#/definitions/TimeoutIssuer"
        },
        "manualIssuerOrBuilder": {
          "$ref": "#/definitions/ManualIssuerOrBuilder"
        },
        "adviserIssuer": {
          "$ref": "#/definitions/AdviserIssuer"
        },
        "adviserIssuerOrBuilder": {
          "$ref": "#/definitions/AdviserIssuerOrBuilder"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "IssuedByOrBuilder": {
      "type": "object",
      "properties": {
        "timeoutIssuerOrBuilder": {
          "$ref": "#/definitions/TimeoutIssuerOrBuilder"
        },
        "issuerCase": {
          "type": "string",
          "enum": ["MANUALISSUER", "ADVISERISSUER", "TIMEOUTISSUER", "ISSUER_NOT_SET"]
        },
        "manualIssuer": {
          "$ref": "#/definitions/ManualIssuer"
        },
        "timeoutIssuer": {
          "$ref": "#/definitions/TimeoutIssuer"
        },
        "manualIssuerOrBuilder": {
          "$ref": "#/definitions/ManualIssuerOrBuilder"
        },
        "adviserIssuer": {
          "$ref": "#/definitions/AdviserIssuer"
        },
        "adviserIssuerOrBuilder": {
          "$ref": "#/definitions/AdviserIssuerOrBuilder"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "LevelDTO": {
      "type": "object",
      "properties": {
        "setupId": {
          "type": "string"
        },
        "runtimeId": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "stepType": {
          "type": "string"
        },
        "group": {
          "type": "string"
        }
      }
    },
    "ManualIssuer": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserManualIssuer"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/ManualIssuer"
        },
        "userIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "emailId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "emailIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "ManualIssuerOrBuilder": {
      "type": "object",
      "properties": {
        "userIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "emailId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "emailIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "parserForType": {
          "$ref": "#/definitions/ParserMessage"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/MessageLite"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "MessageLite": {
      "type": "object",
      "properties": {
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserMessageLite"
        },
        "initialized": {
          "type": "boolean"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/MessageLite"
        }
      }
    },
    "MessageOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserMessageOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/MessageOptions"
        },
        "mapEntry": {
          "type": "boolean"
        },
        "messageSetWireFormat": {
          "type": "boolean"
        },
        "deprecated": {
          "type": "boolean"
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "noStandardDescriptorAccessor": {
          "type": "boolean"
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "MethodDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "service": {
          "$ref": "#/definitions/ServiceDescriptor"
        },
        "inputType": {
          "$ref": "#/definitions/Descriptor"
        },
        "outputType": {
          "$ref": "#/definitions/Descriptor"
        },
        "name": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/MethodOptions"
        },
        "clientStreaming": {
          "type": "boolean"
        },
        "serverStreaming": {
          "type": "boolean"
        }
      }
    },
    "MethodOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserMethodOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/MethodOptions"
        },
        "deprecated": {
          "type": "boolean"
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "idempotencyLevel": {
          "type": "string",
          "enum": ["IDEMPOTENCY_UNKNOWN", "NO_SIDE_EFFECTS", "IDEMPOTENT"]
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "NGTag": {
      "type": "object",
      "required": ["key", "value"],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "NamePart": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserNamePart"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/NamePart"
        },
        "namePart": {
          "type": "string"
        },
        "namePartBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "isExtension": {
          "type": "boolean"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "NamePartOrBuilder": {
      "type": "object",
      "properties": {
        "namePart": {
          "type": "string"
        },
        "namePartBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "isExtension": {
          "type": "boolean"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "NodeRunInfo": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "whenConditionBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "whenCondition": {
          "type": "string"
        },
        "evaluatedCondition": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserNodeRunInfo"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/NodeRunInfo"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "OneofDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "containingType": {
          "$ref": "#/definitions/Descriptor"
        },
        "fieldCount": {
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDescriptor"
          }
        },
        "name": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/OneofOptions"
        }
      }
    },
    "OneofOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserOneofOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/OneofOptions"
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "OrchestrationAdjacencyListDTO": {
      "type": "object",
      "properties": {
        "graphVertexMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/GraphVertexDTO"
          }
        },
        "adjacencyMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/EdgeList"
          }
        }
      }
    },
    "OrchestrationGraphDTO": {
      "type": "object",
      "properties": {
        "planExecutionId": {
          "type": "string"
        },
        "startTs": {
          "type": "integer",
          "format": "int64"
        },
        "endTs": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "NO_OP",
            "RUNNING",
            "INTERVENTION_WAITING",
            "TIMED_WAITING",
            "ASYNC_WAITING",
            "TASK_WAITING",
            "DISCONTINUING",
            "PAUSING",
            "QUEUED",
            "SKIPPED",
            "PAUSED",
            "ABORTED",
            "ERRORED",
            "FAILED",
            "EXPIRED",
            "SUSPENDED",
            "SUCCEEDED",
            "IGNORE_FAILED",
            "APPROVAL_WAITING",
            "RESOURCE_WAITING",
            "UNRECOGNIZED"
          ]
        },
        "rootNodeIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "adjacencyList": {
          "$ref": "#/definitions/OrchestrationAdjacencyListDTO"
        }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "PageCIBuildResponseDTO": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int64"
        },
        "totalItems": {
          "type": "integer",
          "format": "int64"
        },
        "pageItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "pageSize": {
          "type": "integer",
          "format": "int64"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CIBuildResponseDTO"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int64"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "Parser": {
      "type": "object"
    },
    "ParserAdviserIssuer": {
      "type": "object"
    },
    "ParserAsyncExecutableResponse": {
      "type": "object"
    },
    "ParserChild": {
      "type": "object"
    },
    "ParserChildChainExecutableResponse": {
      "type": "object"
    },
    "ParserChildExecutableResponse": {
      "type": "object"
    },
    "ParserChildrenExecutableResponse": {
      "type": "object"
    },
    "ParserEnumOptions": {
      "type": "object"
    },
    "ParserEnumValueOptions": {
      "type": "object"
    },
    "ParserExecutableResponse": {
      "type": "object"
    },
    "ParserFieldOptions": {
      "type": "object"
    },
    "ParserFileOptions": {
      "type": "object"
    },
    "ParserInterruptConfig": {
      "type": "object"
    },
    "ParserIssuedBy": {
      "type": "object"
    },
    "ParserManualIssuer": {
      "type": "object"
    },
    "ParserMessage": {
      "type": "object"
    },
    "ParserMessageLite": {
      "type": "object"
    },
    "ParserMessageOptions": {
      "type": "object"
    },
    "ParserMethodOptions": {
      "type": "object"
    },
    "ParserNamePart": {
      "type": "object"
    },
    "ParserNodeRunInfo": {
      "type": "object"
    },
    "ParserOneofOptions": {
      "type": "object"
    },
    "ParserRetryInterruptConfig": {
      "type": "object"
    },
    "ParserServiceOptions": {
      "type": "object"
    },
    "ParserSkipInfo": {
      "type": "object"
    },
    "ParserSkipTaskExecutableResponse": {
      "type": "object"
    },
    "ParserSyncExecutableResponse": {
      "type": "object"
    },
    "ParserTaskChainExecutableResponse": {
      "type": "object"
    },
    "ParserTaskExecutableResponse": {
      "type": "object"
    },
    "ParserTimeoutIssuer": {
      "type": "object"
    },
    "ParserUninterpretedOption": {
      "type": "object"
    },
    "ParserUnitProgress": {
      "type": "object"
    },
    "ProfileScopingRulesDetails": {
      "type": "object",
      "properties": {
        "profileId": {
          "type": "string"
        },
        "profileName": {
          "type": "string"
        },
        "scopingRulesDescriptions": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProgressData": {
      "type": "object"
    },
    "Response": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "object"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_KEY",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "INVALID_YAML_PAYLOAD",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "DATA"
          ]
        },
        "level": {
          "type": "string",
          "enum": ["INFO", "ERROR"]
        },
        "message": {
          "type": "string"
        },
        "exception": {
          "$ref": "#/definitions/Throwable"
        },
        "failureTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EXPIRED",
              "DELEGATE_PROVISIONING",
              "CONNECTIVITY",
              "AUTHENTICATION",
              "VERIFICATION_FAILURE",
              "APPLICATION_ERROR",
              "AUTHORIZATION_ERROR",
              "TIMEOUT_ERROR"
            ]
          }
        }
      }
    },
    "ResponsePageCIBuildResponseDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PageCIBuildResponseDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RetryInterruptConfig": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserRetryInterruptConfig"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/RetryInterruptConfig"
        },
        "retryId": {
          "type": "string"
        },
        "retryIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "RetryInterruptConfigOrBuilder": {
      "type": "object",
      "properties": {
        "retryId": {
          "type": "string"
        },
        "retryIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "ServiceDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "methods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MethodDescriptor"
          }
        },
        "name": {
          "type": "string"
        },
        "options": {
          "$ref": "#/definitions/ServiceOptions"
        }
      }
    },
    "ServiceOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserServiceOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/ServiceOptions"
        },
        "deprecated": {
          "type": "boolean"
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "SkipInfo": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "skipCondition": {
          "type": "string"
        },
        "skipConditionBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "evaluatedCondition": {
          "type": "boolean"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserSkipInfo"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/SkipInfo"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "SkipTaskExecutableResponse": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "message": {
          "type": "string"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserSkipTaskExecutableResponse"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/SkipTaskExecutableResponse"
        },
        "messageBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "SkipTaskExecutableResponseOrBuilder": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "messageBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "methodName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "nativeMethod": {
          "type": "boolean"
        }
      }
    },
    "SyncExecutableResponse": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserSyncExecutableResponse"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/SyncExecutableResponse"
        },
        "logKeysList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logKeysCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "SyncExecutableResponseOrBuilder": {
      "type": "object",
      "properties": {
        "logKeysList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logKeysCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "TaskChainExecutableResponse": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserTaskChainExecutableResponse"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/TaskChainExecutableResponse"
        },
        "taskName": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "logKeysList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logKeysCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "passThroughData": {
          "$ref": "#/definitions/ByteString"
        },
        "taskIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "taskCategoryValue": {
          "type": "integer",
          "format": "int32"
        },
        "taskCategory": {
          "type": "string",
          "enum": ["UNKNOWN_CATEGORY", "DELEGATE_TASK_V1", "DELEGATE_TASK_V2", "UNRECOGNIZED"]
        },
        "taskNameBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "chainEnd": {
          "type": "boolean"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "TaskChainExecutableResponseOrBuilder": {
      "type": "object",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "logKeysList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logKeysCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "passThroughData": {
          "$ref": "#/definitions/ByteString"
        },
        "taskIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "taskCategoryValue": {
          "type": "integer",
          "format": "int32"
        },
        "taskCategory": {
          "type": "string",
          "enum": ["UNKNOWN_CATEGORY", "DELEGATE_TASK_V1", "DELEGATE_TASK_V2", "UNRECOGNIZED"]
        },
        "taskNameBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "chainEnd": {
          "type": "boolean"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "TaskExecutableResponse": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserTaskExecutableResponse"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/TaskExecutableResponse"
        },
        "taskName": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "logKeysList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logKeysCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "taskCategoryValue": {
          "type": "integer",
          "format": "int32"
        },
        "taskCategory": {
          "type": "string",
          "enum": ["UNKNOWN_CATEGORY", "DELEGATE_TASK_V1", "DELEGATE_TASK_V2", "UNRECOGNIZED"]
        },
        "taskNameBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "TaskExecutableResponseOrBuilder": {
      "type": "object",
      "properties": {
        "taskName": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "logKeysList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logKeysCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsCount": {
          "type": "integer",
          "format": "int32"
        },
        "unitsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "taskIdBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "taskCategoryValue": {
          "type": "integer",
          "format": "int32"
        },
        "taskCategory": {
          "type": "string",
          "enum": ["UNKNOWN_CATEGORY", "DELEGATE_TASK_V1", "DELEGATE_TASK_V2", "UNRECOGNIZED"]
        },
        "taskNameBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "TemporalUnit": {
      "type": "object",
      "properties": {
        "timeBased": {
          "type": "boolean"
        },
        "dateBased": {
          "type": "boolean"
        },
        "durationEstimated": {
          "type": "boolean"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "TimeoutIssuer": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserTimeoutIssuer"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/TimeoutIssuer"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "TimeoutIssuerOrBuilder": {
      "type": "object",
      "properties": {
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "UninterpretedOption": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "nameCount": {
          "type": "integer",
          "format": "int32"
        },
        "stringValue": {
          "$ref": "#/definitions/ByteString"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserUninterpretedOption"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/UninterpretedOption"
        },
        "doubleValue": {
          "type": "number",
          "format": "double"
        },
        "positiveIntValue": {
          "type": "integer",
          "format": "int64"
        },
        "negativeIntValue": {
          "type": "integer",
          "format": "int64"
        },
        "aggregateValue": {
          "type": "string"
        },
        "aggregateValueBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "nameList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamePart"
          }
        },
        "nameOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamePartOrBuilder"
          }
        },
        "identifierValue": {
          "type": "string"
        },
        "identifierValueBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "UninterpretedOptionOrBuilder": {
      "type": "object",
      "properties": {
        "nameCount": {
          "type": "integer",
          "format": "int32"
        },
        "stringValue": {
          "$ref": "#/definitions/ByteString"
        },
        "doubleValue": {
          "type": "number",
          "format": "double"
        },
        "positiveIntValue": {
          "type": "integer",
          "format": "int64"
        },
        "negativeIntValue": {
          "type": "integer",
          "format": "int64"
        },
        "aggregateValue": {
          "type": "string"
        },
        "aggregateValueBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "nameList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamePart"
          }
        },
        "nameOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamePartOrBuilder"
          }
        },
        "identifierValue": {
          "type": "string"
        },
        "identifierValueBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "initialized": {
          "type": "boolean"
        }
      }
    },
    "UnitProgress": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "statusValue": {
          "type": "integer",
          "format": "int32"
        },
        "unitName": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["UNKNOWN", "SUCCESS", "FAILURE", "RUNNING", "QUEUED", "SKIPPED", "EXPIRED", "UNRECOGNIZED"]
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "unitNameBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserUnitProgress"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/UnitProgress"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        }
      }
    },
    "UnknownFieldSet": {
      "type": "object",
      "properties": {
        "initialized": {
          "type": "boolean"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/Parser"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSizeAsMessageSet": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResponseCIBuildResponseDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/CIBuildResponseDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "BuildHealth": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "rate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "BuildInfo": {
      "type": "object",
      "properties": {
        "total": {
          "$ref": "#/definitions/BuildHealth"
        },
        "success": {
          "$ref": "#/definitions/BuildHealth"
        },
        "failed": {
          "$ref": "#/definitions/BuildHealth"
        }
      }
    },
    "DashboardBuildsHealthInfo": {
      "type": "object",
      "properties": {
        "builds": {
          "$ref": "#/definitions/BuildInfo"
        }
      }
    },
    "ResponseDashboardBuildsHealthInfo": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/DashboardBuildsHealthInfo"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "Failure": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_KEY",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "INVALID_YAML_PAYLOAD",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "DATA"
          ]
        },
        "message": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_KEY",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "INVALID_YAML_PAYLOAD",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "DATA"
          ]
        },
        "message": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "detailedMessage": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "BuildCount": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "success": {
          "type": "integer",
          "format": "int64"
        },
        "failed": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BuildExecutionInfo": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string"
        },
        "builds": {
          "$ref": "#/definitions/BuildCount"
        }
      }
    },
    "DashboardBuildExecutionInfo": {
      "type": "object",
      "properties": {
        "buildExecutionInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildExecutionInfo"
          }
        }
      }
    },
    "ResponseDashboardBuildExecutionInfo": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/DashboardBuildExecutionInfo"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "BuildRepositoryCount": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DashboardBuildRepositoryInfo": {
      "type": "object",
      "properties": {
        "repositoryInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepositoryInfo"
          }
        }
      }
    },
    "RepositoryBuildInfo": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string"
        },
        "builds": {
          "$ref": "#/definitions/BuildRepositoryCount"
        }
      }
    },
    "RepositoryInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "buildCount": {
          "type": "integer",
          "format": "int64"
        },
        "percentSuccess": {
          "type": "number",
          "format": "double"
        },
        "successRate": {
          "type": "number",
          "format": "double"
        },
        "lastCommit": {
          "type": "string"
        },
        "countList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RepositoryBuildInfo"
          }
        },
        "time": {
          "type": "string"
        }
      }
    },
    "ResponseDashboardBuildRepositoryInfo": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/DashboardBuildRepositoryInfo"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "BuildActiveInfo": {
      "type": "object",
      "properties": {
        "piplineName": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "commit": {
          "type": "string"
        },
        "commitID": {
          "type": "string"
        },
        "startTs": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "endTs": {
          "type": "string"
        }
      }
    },
    "BuildFailureInfo": {
      "type": "object",
      "properties": {
        "piplineName": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "commit": {
          "type": "string"
        },
        "commitID": {
          "type": "string"
        },
        "startTs": {
          "type": "string"
        },
        "endTs": {
          "type": "string"
        }
      }
    },
    "DashboardBuildsActiveAndFailedInfo": {
      "type": "object",
      "properties": {
        "failed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildFailureInfo"
          }
        },
        "active": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BuildActiveInfo"
          }
        }
      }
    },
    "ResponseDashboardBuildsActiveAndFailedInfo": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/DashboardBuildsActiveAndFailedInfo"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RestResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "JsonNode": {
      "type": "object",
      "properties": {
        "array": {
          "type": "boolean"
        },
        "null": {
          "type": "boolean"
        },
        "containerNode": {
          "type": "boolean"
        },
        "object": {
          "type": "boolean"
        },
        "nodeType": {
          "type": "string",
          "enum": ["ARRAY", "BINARY", "BOOLEAN", "MISSING", "NULL", "NUMBER", "OBJECT", "POJO", "STRING"]
        },
        "pojo": {
          "type": "boolean"
        },
        "number": {
          "type": "boolean"
        },
        "integralNumber": {
          "type": "boolean"
        },
        "floatingPointNumber": {
          "type": "boolean"
        },
        "short": {
          "type": "boolean"
        },
        "int": {
          "type": "boolean"
        },
        "long": {
          "type": "boolean"
        },
        "float": {
          "type": "boolean"
        },
        "double": {
          "type": "boolean"
        },
        "bigDecimal": {
          "type": "boolean"
        },
        "bigInteger": {
          "type": "boolean"
        },
        "textual": {
          "type": "boolean"
        },
        "boolean": {
          "type": "boolean"
        },
        "binary": {
          "type": "boolean"
        },
        "valueNode": {
          "type": "boolean"
        },
        "missingNode": {
          "type": "boolean"
        }
      }
    },
    "PartialSchemaDTO": {
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "#/definitions/JsonNode"
        },
        "nodeType": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "ResponsePartialSchemaDTO": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/PartialSchemaDTO"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    }
  }
}
