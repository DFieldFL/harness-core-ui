"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include("Included when true." if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip("Skipped when true." if: Boolean!) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT
"Marks the field or enum value as deprecated"
directive @deprecated(
  "The reason for the deprecation"
  reason: String = "No longer supported"
) on FIELD_DEFINITION | ENUM_VALUE
"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy("The URL that specifies the behaviour of this scalar." url: String!) on SCALAR
"This union of all types of recommendations"
union recommendationDetails = NodeRecommendationDTO | WorkloadRecommendationDTO
type BillingDataDemo {
  billingamount: Float
  instancedata: InstanceDataDemo
  instanceid: String
  instancename: String
  starttime: Long
}
type ContainerHistogramDTO {
  containerName: String
  cpuHistogram: HistogramExp
  memoryHistogram: HistogramExp
}
type HistogramExp {
  bucketWeights: [Float]
  firstBucketSize: Float!
  growthRatio: Float!
  maxBucket: Int!
  minBucket: Int!
  numBuckets: Int!
  precomputed: [Float]
  totalWeight: Float!
}
type InstanceDataDemo {
  cloudprovider: String
  instancetype: String
  region: String
}
type NodeDTO {
  id: String
  monthlyCost: Float!
  monthlySaving: Float!
  recommendationDetails(endTime: OffsetDateTime, startTime: OffsetDateTime): recommendationDetails
  resourceName: String
  resourceType: ResourceType!
}
type NodeRecommendationDTO {
  id: String
  name: String
}
"Query root"
type Query {
  billingdata(clusterid: String, endTime: OffsetTime, startTime: OffsetTime): [BillingDataDemo]
  instancedata(instanceid: String!): InstanceDataDemo
  recommendationDetails(
    endTime: OffsetDateTime
    id: String!
    resourceType: ResourceType!
    startTime: OffsetDateTime
  ): recommendationDetails
  recommendations: RecommendationsDTO
}
type RecommendationsDTO {
  items: [NodeDTO]
  totalMonthlyCost: Float!
  totalMonthlySaving: Float!
}
type WorkloadRecommendationDTO {
  items: [ContainerHistogramDTO]
}
enum ResourceType {
  AUTO_STOPPING
  CLUSTER
  NODE
  WORKLOAD
}
"Long type"
scalar Long
"Built-in scalar representing a date-time with a UTC offset"
scalar OffsetDateTime
"Built-in scalar representing a time with a UTC offset"
scalar OffsetTime
"Use SPQR's SchemaPrinter to remove this from SDL"
scalar UNREPRESENTABLE
