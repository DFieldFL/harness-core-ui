{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "CE NextGen API Reference"
  },
  "basePath": "/ccm/api",
  "tags": [
    {
      "name": "budgets"
    },
    {
      "name": "business-mapping"
    },
    {
      "name": "yaml"
    },
    {
      "name": "connector"
    },
    {
      "name": "graphql"
    },
    {
      "name": "health"
    },
    {
      "name": "metrics"
    },
    {
      "name": "perspective-custom-field"
    },
    {
      "name": "perspectiveReport"
    },
    {
      "name": "perspective"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/budgets/{id}": {
      "get": {
        "tags": ["budgets"],
        "summary": "Get budget",
        "description": "",
        "operationId": "getBudget",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseBudget"
            }
          }
        }
      },
      "post": {
        "tags": ["budgets"],
        "summary": "Clone budget",
        "description": "",
        "operationId": "cloneBudget",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloneName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      },
      "put": {
        "tags": ["budgets"],
        "summary": "Update budget",
        "description": "",
        "operationId": "updateBudget",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      },
      "delete": {
        "tags": ["budgets"],
        "summary": "Delete budget",
        "description": "",
        "operationId": "deleteBudget",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/budgets/perspectiveBudgets": {
      "get": {
        "tags": ["budgets"],
        "summary": "List budgets for perspective",
        "description": "",
        "operationId": "listBudgetsForPerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListBudget"
            }
          }
        }
      }
    },
    "/budgets": {
      "get": {
        "tags": ["budgets"],
        "summary": "List budgets for account",
        "description": "",
        "operationId": "listBudgetsForAccount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListBudget"
            }
          }
        }
      },
      "post": {
        "tags": ["budgets"],
        "summary": "Create budget",
        "description": "",
        "operationId": "createBudget",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Budget"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/budgets/forecastCost": {
      "get": {
        "tags": ["budgets"],
        "summary": "Deprecated use /perspective/forecastCost instead, Get forecast cost for perspective.",
        "description": "",
        "operationId": "getForecastCost",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        },
        "deprecated": true
      }
    },
    "/budgets/lastMonthCost": {
      "get": {
        "tags": ["budgets"],
        "summary": "Deprecated use /perspective/lastMonthCost instead, Get last month cost for perspective.",
        "description": "",
        "operationId": "getLastMonthCost",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        },
        "deprecated": true
      }
    },
    "/budgets/{id}/costDetails": {
      "get": {
        "tags": ["budgets"],
        "summary": "Get cost details for budget",
        "description": "",
        "operationId": "getCostDetails",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseBudgetData"
            }
          }
        }
      }
    },
    "/business-mapping/{id}": {
      "get": {
        "tags": ["business-mapping"],
        "summary": "Get Business Mapping",
        "description": "",
        "operationId": "getBusinessMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBusinessMapping"
            }
          }
        }
      },
      "delete": {
        "tags": ["business-mapping"],
        "summary": "Delete Business Mapping",
        "description": "",
        "operationId": "deleteBusinessMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/business-mapping": {
      "get": {
        "tags": ["business-mapping"],
        "summary": "Get List Of Business Mappings",
        "description": "",
        "operationId": "getBusinessMappingList",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseListBusinessMapping"
            }
          }
        }
      },
      "post": {
        "tags": ["business-mapping"],
        "summary": "Create Business Mapping",
        "description": "",
        "operationId": "createBusinessMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BusinessMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseBoolean"
            }
          }
        }
      },
      "put": {
        "tags": ["business-mapping"],
        "summary": "Update Business Mapping",
        "description": "",
        "operationId": "updateBusinessMapping",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/BusinessMapping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/yaml/cloudCostK8sClusterSetup": {
      "post": {
        "tags": ["yaml"],
        "summary": "get k8s cluster setup yaml based on features enabled",
        "description": "",
        "operationId": "cloudCostK8sClusterSetup",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/K8sClusterSetupRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/yaml/generate-cost-optimisation-yaml": {
      "post": {
        "tags": ["yaml"],
        "summary": "Get Cost Optimisation Yaml",
        "description": "",
        "operationId": "getCostOptimisationYamlTemplate",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        },
        "deprecated": true
      }
    },
    "/connector/azureappclientid": {
      "get": {
        "tags": ["connector"],
        "summary": "Get Azure application client Id",
        "description": "",
        "operationId": "azureappclientid",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/connector/awsaccountconnectiondetail": {
      "get": {
        "tags": ["connector"],
        "summary": "Get Aws account connection details",
        "description": "",
        "operationId": "awsaccountconnectiondetail",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseAwsAccountConnectionDetail"
            }
          }
        }
      }
    },
    "/connector/gcpserviceaccount": {
      "get": {
        "tags": ["connector"],
        "summary": "Provision and Get GCP Service Account",
        "description": "",
        "operationId": "gcpserviceaccount",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/graphql": {
      "post": {
        "tags": ["graphql"],
        "operationId": "execute_1",
        "consumes": ["text/plain"],
        "produces": ["application/json", "text/plain"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projectIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/graphql/schema": {
      "get": {
        "tags": ["graphql"],
        "operationId": "getSchema",
        "produces": ["application/json", "text/plain"],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health"],
        "summary": "Get CE-NG Manager health",
        "description": "",
        "operationId": "getCENGMicroserviceHealthStatus",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/metrics/timescale": {
      "get": {
        "tags": ["metrics"],
        "summary": "timescale",
        "description": "",
        "operationId": "timescale sql queries stats",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseMapStringQueryStat"
            }
          }
        }
      }
    },
    "/perspective-custom-field": {
      "get": {
        "tags": ["perspective-custom-field"],
        "summary": "Get customField",
        "description": "",
        "operationId": "getCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customFieldId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseViewCustomField"
            }
          }
        }
      },
      "post": {
        "tags": ["perspective-custom-field"],
        "summary": "Save customField",
        "description": "",
        "operationId": "saveCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ViewCustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseViewCustomField"
            }
          }
        }
      },
      "put": {
        "tags": ["perspective-custom-field"],
        "summary": "Update customField",
        "description": "",
        "operationId": "updateCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ViewCustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseViewCustomField"
            }
          }
        }
      },
      "delete": {
        "tags": ["perspective-custom-field"],
        "summary": "Delete customField",
        "description": "",
        "operationId": "deleteCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customFieldId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/perspective-custom-field/validate": {
      "post": {
        "tags": ["perspective-custom-field"],
        "summary": "Validate customField",
        "description": "",
        "operationId": "validateCustomField",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ViewCustomField"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponseString"
            }
          }
        }
      }
    },
    "/perspectiveReport/{accountIdentifier}": {
      "get": {
        "tags": ["perspectiveReport"],
        "summary": "Get perspective reports",
        "description": "",
        "operationId": "getReportSetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reportId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListCEReportSchedule"
            }
          }
        }
      },
      "post": {
        "tags": ["perspectiveReport"],
        "summary": "Create perspective reports",
        "description": "",
        "operationId": "createReportSetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEReportSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListCEReportSchedule"
            }
          }
        }
      },
      "put": {
        "tags": ["perspectiveReport"],
        "summary": "Update perspective reports",
        "description": "",
        "operationId": "updateReportSetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEReportSchedule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseListCEReportSchedule"
            }
          }
        }
      },
      "delete": {
        "tags": ["perspectiveReport"],
        "summary": "Delete perspective reports",
        "description": "",
        "operationId": "deleteReportSetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "reportId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/perspective": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get perspective",
        "description": "",
        "operationId": "getPerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCEView"
            }
          }
        }
      },
      "post": {
        "tags": ["perspective"],
        "summary": "Create perspective",
        "description": "",
        "operationId": "createPerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "clone",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCEView"
            }
          }
        }
      },
      "put": {
        "tags": ["perspective"],
        "summary": "Update perspective",
        "description": "",
        "operationId": "updatePerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CEView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseCEView"
            }
          }
        }
      },
      "delete": {
        "tags": ["perspective"],
        "summary": "Delete perspective",
        "description": "",
        "operationId": "deletePerspective",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseString"
            }
          }
        }
      }
    },
    "/perspective/forecastCost": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get forecast cost for perspective",
        "description": "",
        "operationId": "getForecastCostV2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        }
      }
    },
    "/perspective/lastPeriodCost": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get last period cost for perspective",
        "description": "",
        "operationId": "getLastPeriodCost",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "period",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "YEARLY"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        }
      }
    },
    "/perspective/lastMonthCost": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get last month cost for perspective",
        "description": "",
        "operationId": "getLastMonthCostV2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        }
      }
    },
    "/perspective/forecastCostForPeriod": {
      "get": {
        "tags": ["perspective"],
        "summary": "Get forecast cost for perspective for given period",
        "description": "",
        "operationId": "getForecastCostForPeriod",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "perspectiveId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "period",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": ["DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "YEARLY"]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDouble"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AlertThreshold": {
      "type": "object",
      "properties": {
        "percentage": {
          "type": "number",
          "format": "double"
        },
        "basedOn": {
          "type": "string",
          "enum": ["ACTUAL_COST", "FORECASTED_COST"]
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "slackWebhooks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alertsSent": {
          "type": "integer",
          "format": "int32"
        },
        "crossedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApplicationBudgetScope": {
      "allOf": [
        {
          "$ref": "#/definitions/BudgetScope"
        },
        {
          "type": "object",
          "properties": {
            "applicationIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "environmentType": {
              "type": "string",
              "enum": ["PROD", "NON_PROD", "ALL"]
            }
          }
        }
      ]
    },
    "Budget": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scope": {
          "$ref": "#/definitions/BudgetScope"
        },
        "type": {
          "type": "string",
          "enum": ["SPECIFIED_AMOUNT", "PREVIOUS_MONTH_SPEND", "PREVIOUS_PERIOD_SPEND"]
        },
        "budgetAmount": {
          "type": "number",
          "format": "double"
        },
        "period": {
          "type": "string",
          "enum": ["DAILY", "WEEKLY", "MONTHLY", "QUARTERLY", "YEARLY"]
        },
        "growthRate": {
          "type": "number",
          "format": "double"
        },
        "actualCost": {
          "type": "number",
          "format": "double"
        },
        "forecastCost": {
          "type": "number",
          "format": "double"
        },
        "lastMonthCost": {
          "type": "number",
          "format": "double"
        },
        "alertThresholds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertThreshold"
          }
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notifyOnSlack": {
          "type": "boolean"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BudgetScope": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "budgetScopeType": {
          "type": "string"
        },
        "entityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterBudgetScope": {
      "allOf": [
        {
          "$ref": "#/definitions/BudgetScope"
        },
        {
          "type": "object",
          "properties": {
            "clusterIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "PerspectiveBudgetScope": {
      "allOf": [
        {
          "$ref": "#/definitions/BudgetScope"
        },
        {
          "type": "object",
          "properties": {
            "viewId": {
              "type": "string"
            },
            "viewName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "Response": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "object"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseBudget": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/Budget"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseString": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "string"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseListBudget": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Budget"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseDouble": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "number",
          "format": "double"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "BudgetCostData": {
      "type": "object",
      "properties": {
        "time": {
          "type": "integer",
          "format": "int64"
        },
        "actualCost": {
          "type": "number",
          "format": "double"
        },
        "budgeted": {
          "type": "number",
          "format": "double"
        },
        "budgetVariance": {
          "type": "number",
          "format": "double"
        },
        "budgetVariancePercentage": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "BudgetData": {
      "type": "object",
      "properties": {
        "costData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BudgetCostData"
          }
        },
        "forecastCost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResponseBudgetData": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/BudgetData"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "BusinessMapping": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "accountId": {
          "type": "string"
        },
        "costTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostTarget"
          }
        },
        "sharedCosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedCost"
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        }
      }
    },
    "CostTarget": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewRule"
          }
        }
      }
    },
    "EmbeddedUser": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "ResponseMessage": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "DEFAULT_ERROR_CODE",
            "INVALID_ARGUMENT",
            "INVALID_EMAIL",
            "DOMAIN_NOT_ALLOWED_TO_REGISTER",
            "COMMNITY_EDITION_NOT_FOUND",
            "DEPLOY_MODE_IS_NOT_ON_PREM",
            "USER_ALREADY_REGISTERED",
            "USER_INVITATION_DOES_NOT_EXIST",
            "USER_DOES_NOT_EXIST",
            "USER_INVITE_OPERATION_FAILED",
            "USER_DISABLED",
            "ACCOUNT_DOES_NOT_EXIST",
            "INACTIVE_ACCOUNT",
            "ACCOUNT_MIGRATED",
            "USER_DOMAIN_NOT_ALLOWED",
            "MAX_FAILED_ATTEMPT_COUNT_EXCEEDED",
            "RESOURCE_NOT_FOUND",
            "ROLE_DOES_NOT_EXIST",
            "EMAIL_NOT_VERIFIED",
            "EMAIL_VERIFICATION_TOKEN_NOT_FOUND",
            "INVALID_TOKEN",
            "REVOKED_TOKEN",
            "INVALID_CAPTCHA_TOKEN",
            "NOT_ACCOUNT_MGR_NOR_HAS_ALL_APP_ACCESS",
            "EXPIRED_TOKEN",
            "TOKEN_ALREADY_REFRESHED_ONCE",
            "ACCESS_DENIED",
            "NG_ACCESS_DENIED",
            "INVALID_CREDENTIAL",
            "INVALID_CREDENTIALS_THIRD_PARTY",
            "INVALID_KEY",
            "INVALID_CONNECTOR_TYPE",
            "INVALID_KEYPATH",
            "INVALID_VARIABLE",
            "UNKNOWN_HOST",
            "UNREACHABLE_HOST",
            "INVALID_PORT",
            "SSH_SESSION_TIMEOUT",
            "SOCKET_CONNECTION_ERROR",
            "CONNECTION_ERROR",
            "SOCKET_CONNECTION_TIMEOUT",
            "CONNECTION_TIMEOUT",
            "SSH_CONNECTION_ERROR",
            "USER_GROUP_ERROR",
            "INVALID_EXECUTION_ID",
            "ERROR_IN_GETTING_CHANNEL_STREAMS",
            "UNEXPECTED",
            "UNKNOWN_ERROR",
            "UNKNOWN_EXECUTOR_TYPE_ERROR",
            "DUPLICATE_STATE_NAMES",
            "TRANSITION_NOT_LINKED",
            "TRANSITION_TO_INCORRECT_STATE",
            "TRANSITION_TYPE_NULL",
            "STATES_WITH_DUP_TRANSITIONS",
            "BARRIERS_NOT_RUNNING_CONCURRENTLY",
            "NON_FORK_STATES",
            "NON_REPEAT_STATES",
            "INITIAL_STATE_NOT_DEFINED",
            "FILE_INTEGRITY_CHECK_FAILED",
            "INVALID_URL",
            "FILE_DOWNLOAD_FAILED",
            "PLATFORM_SOFTWARE_DELETE_ERROR",
            "INVALID_CSV_FILE",
            "INVALID_REQUEST",
            "SCHEMA_VALIDATION_FAILED",
            "FILTER_CREATION_ERROR",
            "INVALID_YAML_ERROR",
            "PLAN_CREATION_ERROR",
            "INVALID_INFRA_STATE",
            "PIPELINE_ALREADY_TRIGGERED",
            "NON_EXISTING_PIPELINE",
            "DUPLICATE_COMMAND_NAMES",
            "INVALID_PIPELINE",
            "COMMAND_DOES_NOT_EXIST",
            "DUPLICATE_ARTIFACTSTREAM_NAMES",
            "DUPLICATE_HOST_NAMES",
            "STATE_NOT_FOR_TYPE",
            "STATE_MACHINE_ISSUE",
            "STATE_DISCONTINUE_FAILED",
            "STATE_PAUSE_FAILED",
            "PAUSE_ALL_ALREADY",
            "RESUME_ALL_ALREADY",
            "ROLLBACK_ALREADY",
            "ABORT_ALL_ALREADY",
            "EXPIRE_ALL_ALREADY",
            "RETRY_FAILED",
            "UNKNOWN_ARTIFACT_TYPE",
            "UNKNOWN_STAGE_ELEMENT_WRAPPER_TYPE",
            "INIT_TIMEOUT",
            "LICENSE_EXPIRED",
            "NOT_LICENSED",
            "REQUEST_TIMEOUT",
            "WORKFLOW_ALREADY_TRIGGERED",
            "JENKINS_ERROR",
            "INVALID_ARTIFACT_SOURCE",
            "INVALID_ARTIFACT_SERVER",
            "INVALID_CLOUD_PROVIDER",
            "UPDATE_NOT_ALLOWED",
            "DELETE_NOT_ALLOWED",
            "APPDYNAMICS_CONFIGURATION_ERROR",
            "APM_CONFIGURATION_ERROR",
            "SPLUNK_CONFIGURATION_ERROR",
            "ELK_CONFIGURATION_ERROR",
            "LOGZ_CONFIGURATION_ERROR",
            "SUMO_CONFIGURATION_ERROR",
            "INSTANA_CONFIGURATION_ERROR",
            "APPDYNAMICS_ERROR",
            "STACKDRIVER_ERROR",
            "STACKDRIVER_CONFIGURATION_ERROR",
            "NEWRELIC_CONFIGURATION_ERROR",
            "NEWRELIC_ERROR",
            "DYNA_TRACE_CONFIGURATION_ERROR",
            "DYNA_TRACE_ERROR",
            "CLOUDWATCH_ERROR",
            "CLOUDWATCH_CONFIGURATION_ERROR",
            "PROMETHEUS_CONFIGURATION_ERROR",
            "DATA_DOG_CONFIGURATION_ERROR",
            "SERVICE_GUARD_CONFIGURATION_ERROR",
            "ENCRYPTION_NOT_CONFIGURED",
            "UNAVAILABLE_DELEGATES",
            "WORKFLOW_EXECUTION_IN_PROGRESS",
            "PIPELINE_EXECUTION_IN_PROGRESS",
            "AWS_ACCESS_DENIED",
            "AWS_CLUSTER_NOT_FOUND",
            "AWS_SERVICE_NOT_FOUND",
            "IMAGE_NOT_FOUND",
            "ILLEGAL_ARGUMENT",
            "IMAGE_TAG_NOT_FOUND",
            "DELEGATE_NOT_AVAILABLE",
            "INVALID_YAML_PAYLOAD",
            "AUTHENTICATION_ERROR",
            "AUTHORIZATION_ERROR",
            "UNRECOGNIZED_YAML_FIELDS",
            "COULD_NOT_MAP_BEFORE_YAML",
            "MISSING_BEFORE_YAML",
            "MISSING_YAML",
            "NON_EMPTY_DELETIONS",
            "GENERAL_YAML_ERROR",
            "GENERAL_YAML_INFO",
            "YAML_GIT_SYNC_ERROR",
            "GIT_CONNECTION_ERROR",
            "GIT_ERROR",
            "ARTIFACT_SERVER_ERROR",
            "ENCRYPT_DECRYPT_ERROR",
            "SECRET_MANAGEMENT_ERROR",
            "SECRET_NOT_FOUND",
            "KMS_OPERATION_ERROR",
            "GCP_KMS_OPERATION_ERROR",
            "VAULT_OPERATION_ERROR",
            "AWS_SECRETS_MANAGER_OPERATION_ERROR",
            "AZURE_KEY_VAULT_OPERATION_ERROR",
            "CYBERARK_OPERATION_ERROR",
            "UNSUPPORTED_OPERATION_EXCEPTION",
            "FEATURE_UNAVAILABLE",
            "GENERAL_ERROR",
            "BASELINE_CONFIGURATION_ERROR",
            "SAML_IDP_CONFIGURATION_NOT_AVAILABLE",
            "INVALID_AUTHENTICATION_MECHANISM",
            "INVALID_SAML_CONFIGURATION",
            "INVALID_OAUTH_CONFIGURATION",
            "INVALID_LDAP_CONFIGURATION",
            "USER_GROUP_SYNC_FAILURE",
            "USER_GROUP_ALREADY_EXIST",
            "INVALID_TWO_FACTOR_AUTHENTICATION_CONFIGURATION",
            "EXPLANATION",
            "HINT",
            "NOT_WHITELISTED_IP",
            "INVALID_TOTP_TOKEN",
            "EMAIL_FAILED",
            "SSL_HANDSHAKE_FAILED",
            "NO_APPS_ASSIGNED",
            "INVALID_INFRA_CONFIGURATION",
            "TEMPLATES_LINKED",
            "USER_HAS_NO_PERMISSIONS",
            "USER_NOT_AUTHORIZED",
            "USER_ALREADY_PRESENT",
            "INVALID_USAGE_RESTRICTION",
            "USAGE_RESTRICTION_ERROR",
            "STATE_EXECUTION_INSTANCE_NOT_FOUND",
            "DELEGATE_TASK_RETRY",
            "KUBERNETES_API_TASK_EXCEPTION",
            "KUBERNETES_TASK_EXCEPTION",
            "KUBERNETES_YAML_ERROR",
            "SAVE_FILE_INTO_GCP_STORAGE_FAILED",
            "READ_FILE_FROM_GCP_STORAGE_FAILED",
            "FILE_NOT_FOUND_ERROR",
            "USAGE_LIMITS_EXCEEDED",
            "EVENT_PUBLISH_FAILED",
            "JIRA_ERROR",
            "EXPRESSION_EVALUATION_FAILED",
            "KUBERNETES_VALUES_ERROR",
            "KUBERNETES_CLUSTER_ERROR",
            "INCORRECT_SIGN_IN_MECHANISM",
            "OAUTH_LOGIN_FAILED",
            "INVALID_TERRAFORM_TARGETS_REQUEST",
            "TERRAFORM_EXECUTION_ERROR",
            "FILE_READ_FAILED",
            "FILE_SIZE_EXCEEDS_LIMIT",
            "CLUSTER_NOT_FOUND",
            "MARKETPLACE_TOKEN_NOT_FOUND",
            "INVALID_MARKETPLACE_TOKEN",
            "INVALID_TICKETING_SERVER",
            "SERVICENOW_ERROR",
            "PASSWORD_EXPIRED",
            "USER_LOCKED",
            "PASSWORD_STRENGTH_CHECK_FAILED",
            "ACCOUNT_DISABLED",
            "INVALID_ACCOUNT_PERMISSION",
            "PAGERDUTY_ERROR",
            "HEALTH_ERROR",
            "SAML_TEST_SUCCESS_MECHANISM_NOT_ENABLED",
            "DOMAIN_WHITELIST_FILTER_CHECK_FAILED",
            "INVALID_DASHBOARD_UPDATE_REQUEST",
            "DUPLICATE_FIELD",
            "INVALID_AZURE_VAULT_CONFIGURATION",
            "USER_NOT_AUTHORIZED_DUE_TO_USAGE_RESTRICTIONS",
            "INVALID_ROLLBACK",
            "DATA_COLLECTION_ERROR",
            "SUMO_DATA_COLLECTION_ERROR",
            "DEPLOYMENT_GOVERNANCE_ERROR",
            "BATCH_PROCESSING_ERROR",
            "GRAPHQL_ERROR",
            "FILE_CREATE_ERROR",
            "ILLEGAL_STATE",
            "GIT_DIFF_COMMIT_NOT_IN_ORDER",
            "FAILED_TO_ACQUIRE_PERSISTENT_LOCK",
            "FAILED_TO_ACQUIRE_NON_PERSISTENT_LOCK",
            "POD_NOT_FOUND_ERROR",
            "COMMAND_EXECUTION_ERROR",
            "REGISTRY_EXCEPTION",
            "ENGINE_INTERRUPT_PROCESSING_EXCEPTION",
            "ENGINE_IO_EXCEPTION",
            "ENGINE_OUTCOME_EXCEPTION",
            "ENGINE_SWEEPING_OUTPUT_EXCEPTION",
            "CACHE_NOT_FOUND_EXCEPTION",
            "ENGINE_ENTITY_UPDATE_EXCEPTION",
            "SHELL_EXECUTION_EXCEPTION",
            "TEMPLATE_NOT_FOUND",
            "AZURE_SERVICE_EXCEPTION",
            "AZURE_CLIENT_EXCEPTION",
            "GIT_UNSEEN_REMOTE_HEAD_COMMIT",
            "TIMEOUT_ENGINE_EXCEPTION",
            "NO_AVAILABLE_DELEGATES",
            "NO_INSTALLED_DELEGATES",
            "DUPLICATE_DELEGATE_EXCEPTION",
            "GCP_MARKETPLACE_EXCEPTION",
            "MISSING_DEFAULT_GOOGLE_CREDENTIALS",
            "INCORRECT_DEFAULT_GOOGLE_CREDENTIALS",
            "OPTIMISTIC_LOCKING_EXCEPTION",
            "NG_PIPELINE_EXECUTION_EXCEPTION",
            "NG_PIPELINE_CREATE_EXCEPTION",
            "RESOURCE_NOT_FOUND_EXCEPTION",
            "PMS_INITIALIZE_SDK_EXCEPTION",
            "UNEXPECTED_SNIPPET_EXCEPTION",
            "UNEXPECTED_SCHEMA_EXCEPTION",
            "CONNECTOR_VALIDATION_EXCEPTION",
            "TIMESCALE_NOT_AVAILABLE",
            "MIGRATION_EXCEPTION",
            "REQUEST_PROCESSING_INTERRUPTED",
            "GCP_SECRET_MANAGER_OPERATION_ERROR",
            "GCP_SECRET_OPERATION_ERROR",
            "GIT_OPERATION_ERROR",
            "TASK_FAILURE_ERROR",
            "INSTANCE_STATS_PROCESS_ERROR",
            "INSTANCE_STATS_MIGRATION_ERROR",
            "DEPLOYMENT_MIGRATION_ERROR",
            "INSTANCE_STATS_AGGREGATION_ERROR",
            "UNRESOLVED_EXPRESSIONS_ERROR",
            "KRYO_HANDLER_NOT_FOUND_ERROR",
            "DELEGATE_ERROR_HANDLER_EXCEPTION",
            "UNEXPECTED_TYPE_ERROR",
            "EXCEPTION_HANDLER_NOT_FOUND",
            "CONNECTOR_NOT_FOUND_EXCEPTION",
            "GCP_SERVER_ERROR",
            "HTTP_RESPONSE_EXCEPTION",
            "SCM_NOT_FOUND_ERROR",
            "SCM_CONFLICT_ERROR",
            "SCM_UNPROCESSABLE_ENTITY",
            "PROCESS_EXECUTION_EXCEPTION",
            "SCM_UNAUTHORIZED",
            "DATA",
            "CONTEXT",
            "PR_CREATION_ERROR",
            "URL_NOT_REACHABLE",
            "URL_NOT_PROVIDED",
            "ENGINE_EXPRESSION_EVALUATION_ERROR",
            "ENGINE_FUNCTOR_ERROR",
            "JIRA_CLIENT_ERROR",
            "SCM_NOT_MODIFIED",
            "JIRA_STEP_ERROR",
            "BUCKET_SERVER_ERROR",
            "GIT_SYNC_ERROR",
            "TEMPLATE_EXCEPTION"
          ]
        },
        "level": {
          "type": "string",
          "enum": ["INFO", "ERROR"]
        },
        "message": {
          "type": "string"
        },
        "exception": {
          "$ref": "#/definitions/Throwable"
        },
        "failureTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EXPIRED",
              "DELEGATE_PROVISIONING",
              "CONNECTIVITY",
              "AUTHENTICATION",
              "VERIFICATION_FAILURE",
              "APPLICATION_ERROR",
              "AUTHORIZATION_ERROR",
              "TIMEOUT_ERROR"
            ]
          }
        }
      }
    },
    "RestResponse": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "object"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseBusinessMapping": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/BusinessMapping"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "SharedCost": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewRule"
          }
        },
        "strategy": {
          "type": "string",
          "enum": ["FIXED", "PROPORTIONAL"]
        },
        "splits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedCostSplit"
          }
        }
      }
    },
    "SharedCostSplit": {
      "type": "object",
      "properties": {
        "costTargetName": {
          "type": "string"
        },
        "percentageContribution": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "StackTraceElement": {
      "type": "object",
      "properties": {
        "methodName": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "lineNumber": {
          "type": "integer",
          "format": "int32"
        },
        "className": {
          "type": "string"
        },
        "nativeMethod": {
          "type": "boolean"
        }
      }
    },
    "Throwable": {
      "type": "object",
      "properties": {
        "cause": {
          "$ref": "#/definitions/Throwable"
        },
        "stackTrace": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackTraceElement"
          }
        },
        "message": {
          "type": "string"
        },
        "localizedMessage": {
          "type": "string"
        },
        "suppressed": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Throwable"
          }
        }
      }
    },
    "ViewCondition": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "ViewField": {
      "type": "object",
      "properties": {
        "fieldId": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        },
        "identifier": {
          "type": "string",
          "enum": ["CLUSTER", "AWS", "GCP", "AZURE", "COMMON", "CUSTOM", "BUSINESS_MAPPING", "LABEL"]
        },
        "identifierName": {
          "type": "string"
        }
      }
    },
    "ViewIdCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/ViewCondition"
        },
        {
          "type": "object",
          "properties": {
            "viewField": {
              "$ref": "#/definitions/ViewField"
            },
            "viewOperator": {
              "type": "string",
              "enum": ["IN", "NOT_IN", "NOT_NULL", "NULL"]
            },
            "values": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ViewRule": {
      "type": "object",
      "properties": {
        "viewConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewCondition"
          }
        }
      }
    },
    "RestResponseString": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "string"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseListBusinessMapping": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessMapping"
          }
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "RestResponseBoolean": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "type": "boolean"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "K8sClusterSetupRequest": {
      "type": "object",
      "properties": {
        "featuresEnabled": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["BILLING", "OPTIMIZATION", "VISIBILITY"]
          }
        },
        "connectorIdentifier": {
          "type": "string"
        },
        "orgIdentifier": {
          "type": "string"
        },
        "projectIdentifier": {
          "type": "string"
        },
        "ccmConnectorIdentifier": {
          "type": "string"
        }
      }
    },
    "AwsAccountConnectionDetail": {
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "harnessAccountId": {
          "type": "string"
        },
        "cloudFormationTemplateLink": {
          "type": "string"
        },
        "stackLaunchTemplateLink": {
          "type": "string"
        }
      }
    },
    "ResponseAwsAccountConnectionDetail": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/AwsAccountConnectionDetail"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "GraphQLQuery": {
      "type": "object",
      "properties": {
        "operationName": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "QueryStat": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "avgExecutionTime": {
          "type": "number",
          "format": "double"
        },
        "maxExecutionTime": {
          "type": "number",
          "format": "double"
        },
        "secondMaxExecutionTime": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ResponseMapStringQueryStat": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/QueryStat"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "RestResponseViewCustomField": {
      "type": "object",
      "properties": {
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "resource": {
          "$ref": "#/definitions/ViewCustomField"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMessage"
          }
        }
      }
    },
    "ViewCustomField": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "viewId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sqlFormula": {
          "type": "string"
        },
        "displayFormula": {
          "type": "string"
        },
        "userDefinedExpression": {
          "type": "string"
        },
        "viewFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewField"
          }
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CEView": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "accountId": {
          "type": "string"
        },
        "viewVersion": {
          "type": "string"
        },
        "viewTimeRange": {
          "$ref": "#/definitions/ViewTimeRange"
        },
        "viewRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewRule"
          }
        },
        "dataSources": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["CLUSTER", "AWS", "GCP", "AZURE", "COMMON", "CUSTOM", "BUSINESS_MAPPING", "LABEL"]
          }
        },
        "viewVisualization": {
          "$ref": "#/definitions/ViewVisualization"
        },
        "viewType": {
          "type": "string",
          "enum": ["SAMPLE", "CUSTOMER", "DEFAULT_AZURE", "DEFAULT"]
        },
        "viewState": {
          "type": "string",
          "enum": ["DRAFT", "COMPLETED"]
        },
        "totalCost": {
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        }
      }
    },
    "ViewTimeRange": {
      "type": "object",
      "properties": {
        "viewTimeRangeType": {
          "type": "string",
          "enum": ["LAST_7", "LAST_30", "LAST_MONTH", "CURRENT_MONTH", "CUSTOM"]
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ViewVisualization": {
      "type": "object",
      "properties": {
        "granularity": {
          "type": "string",
          "enum": ["DAY", "MONTH"]
        },
        "groupBy": {
          "$ref": "#/definitions/ViewField"
        },
        "chartType": {
          "type": "string",
          "enum": ["STACKED_TIME_SERIES", "STACKED_LINE_CHART"]
        }
      }
    },
    "CEReportSchedule": {
      "type": "object",
      "required": ["viewsId"],
      "properties": {
        "uuid": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 32
        },
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "viewsId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 1,
          "minItems": 1
        },
        "userCron": {
          "type": "string"
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 50,
          "minItems": 0
        },
        "accountId": {
          "type": "string"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdatedAt": {
          "type": "integer",
          "format": "int64"
        },
        "userCronTimeZone": {
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "lastUpdatedBy": {
          "$ref": "#/definitions/EmbeddedUser"
        },
        "nextExecution": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ResponseListCEReportSchedule": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CEReportSchedule"
          }
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ResponseCEView": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["SUCCESS", "FAILURE", "ERROR"]
        },
        "data": {
          "$ref": "#/definitions/CEView"
        },
        "metaData": {
          "type": "object"
        },
        "correlationId": {
          "type": "string"
        }
      }
    }
  }
}
