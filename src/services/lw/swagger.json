{
  "swagger": "2.0",
  "info": {
    "description": "Lightwing API documentation",
    "version": "1.0.0",
    "title": "Lightwing APIs",
    "contact": {
      "email": "navaneeth@lightwing.io"
    }
  },
  "host": "api.lightwing.io",
  "basePath": "/orgs",
  "tags": [
    {
      "name": "services",
      "description": "Auto-stopping APIs"
    }
  ],
  "schemes": ["https"],
  "paths": {
    "/accounts/{account_id}/autostopping/rules": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["services"],
        "summary": "Gets all AutoStopping Gateways",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "getServices",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServicesResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post": {
        "tags": ["services"],
        "summary": "Create/Update Autostopping gateway",
        "operationId": "saveService",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Service definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServicesResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/rules/{rule_id}/stats": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "rule_id",
          "in": "path",
          "required": true,
          "type": "number"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["services"],
        "summary": "Get statuses of given autostopping rule",
        "description": "Returns duration of idle time and down time",
        "operationId": "GetServiceStats",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceStatsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/rules/{rule_id}": {
      "get": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["RouteDetails"],
        "summary": "Details of a Route",
        "description": "Get Details of a Route",
        "operationId": "RouteDetails",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "response": {
                  "$ref": "#/definitions/SaveServiceRequest"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["deleteService"],
        "summary": "Service Deletion",
        "description": "Deletes a service",
        "operationId": "DeleteService",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/rules/{rule_id}/health": {
      "get": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["Health"],
        "summary": "Health of a service",
        "description": "Returns health of a service",
        "operationId": "HealthOfService",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceHealthResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/rules/{rule_id}/savings": {
      "get": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "type": "string"
          },
          {
            "name": "group_by",
            "in": "query",
            "type": "string"
          }
        ],
        "tags": ["Savings"],
        "summary": "Savings of a service",
        "description": "Returns savings of a service",
        "operationId": "SavingsOfService",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/definitions/ServiceSavingsResponse"
                },
                {
                  "$ref": "#/definitions/ServiceSavingsGraphResponse"
                }
              ]
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/rules/{rule_id}/requests": {
      "get": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["Requests"],
        "summary": "Requests of a service",
        "description": "Returns requests of a service",
        "operationId": "RequestsOfService",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceRequestsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/rules/{rule_id}/logs": {
      "get": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["Logs"],
        "summary": "Logs of a service",
        "description": "Returns logs of a service",
        "operationId": "LogsOfService",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceLogsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/rules/{rule_id}/resources": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "region",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "rule_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int64"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["serviceResources"],
        "summary": "Lists all resources for a service",
        "description": "Lists all resources for a service",
        "operationId": "AllServiceResources",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllResourcesOfAccountResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/rules/{rule_id}/diagnostics": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "rule_id",
          "in": "path",
          "required": true,
          "type": "number"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["diagnostics"],
        "summary": "Service Diagnostics",
        "description": "Gets the diagnostics result of a service",
        "operationId": "GetServiceDiagnostics",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceDiagnosticsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/rules/savings/cumulative": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["serviceCumulativeSavings"],
        "summary": "CumulativeSavings for all services",
        "description": "CumulativeSavings for all services",
        "operationId": "CumulativeServiceSavings",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CumulativeSavingsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/rules/{rule_id}/toggle_state": {
      "put": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "disable",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["ToggleAutostoppingRule"],
        "summary": "Toggle state of Autostopping Rule",
        "description": "Toggle state of Autostopping Rule",
        "operationId": "ToggleAutostoppingRule",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "schema": {
                "$ref": "#/definitions/ServicesResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/loadbalancers": {
      "post": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessPoint",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccessPoint"
            }
          }
        ],
        "tags": ["CreateAccessPoint"],
        "summary": "Create an AccessPoint",
        "description": "Create an AccessPoint",
        "operationId": "CreateAccessPoint",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateAccessPointResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "vpc",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cloud_account_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": ["ListAccessPoints"],
        "summary": "List all AccessPoints",
        "description": "List all AccessPoints",
        "operationId": "ListAccessPoints",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ListAccessPointResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "delete": {
        "description": "Delete Access Points",
        "operationId": "DeleteAccessPoints",
        "tags": ["Delete Access Points"],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "accessPoint",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteAccessPointPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/loadbalancers/supported_resources": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "region",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource_group_name",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Access Point Resources"],
        "summary": "Lists all resources that can be used as access point",
        "description": "Lists all resources that can be used as access point. Eg : alb in the case of AWS account",
        "operationId": "AccessPointResources",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccessPointCoresResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/loadbalancers/all": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["allAccessPoints"],
        "summary": "Lists all AccessPoints for an account",
        "description": "Returns all AccessPoints for an account",
        "operationId": "AllAccessPoints",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ListAccessPointResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/loadbalancers/{lb_id}": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "lb_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["GetAccessPoint"],
        "summary": "Get access point",
        "description": "Get access point",
        "operationId": "GetAccessPoint",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetAccessPointResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/loadbalancers/{lb_id}/map_dns": {
      "post": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "lb_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaptoDNSBody"
            }
          }
        ],
        "tags": ["mapToDNS"],
        "summary": "map access point to dns",
        "description": "map access point to dns",
        "operationId": "MapToDNS",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/loadbalancers/{lb_id}/rules": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "lb_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["accessPointRules"],
        "summary": "Lists all Rules for an access point",
        "description": "Lists all Rules for an access point",
        "operationId": "AccessPointRules",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServicesResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/autostopping/loadbalancers/{lb_id}/last_active_at": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "lb_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["accessPointActivity"],
        "summary": "get lastest activity for an access point",
        "description": "get lastest activity for an access point",
        "operationId": "AccessPointActivity",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AccessPointActivityResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/resources": {
      "post": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloud_account_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceFilterBody"
            }
          }
        ],
        "tags": ["AllResourcesOfAccount"],
        "summary": "Lists all resources under an account",
        "description": "Returns all resources under an account matching the given filter",
        "operationId": "AllResourcesOfAccount",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "schema": {
                "$ref": "#/definitions/AllResourcesOfAccountResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/instance_nsg": {
      "post": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloud_account_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SGResourceFilterBody"
            }
          }
        ],
        "tags": ["Resources"],
        "summary": "Network security groups of an instance",
        "description": "Returns all the network security group definitions ",
        "operationId": "SecurityGroupsOfInstances",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/SecurityGroupsOfInstancesResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/reports": {
      "post": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportRequestBody"
            }
          }
        ],
        "tags": ["GatewaySessionReport"],
        "summary": "Get GatewaySessionReport",
        "description": "Get GatewaySessionReport",
        "operationId": "GatewaySessionReport",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "schema": {
                "$ref": "#/definitions/GatewaySessionReportResponse"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/regions": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["regions"],
        "summary": "Lists all regions for a cloud account",
        "description": "Returns all regions for a cloud account",
        "operationId": "AllRegions",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllRegionsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/resource_groups": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["resourceGroups"],
        "summary": "Lists all resource groups for a cloud account",
        "description": "Returns all resource groups for a cloud account",
        "operationId": "AllResourceGroups",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllResourceGroupsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/virtual_networks": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "region",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource_group_name",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["vpcs"],
        "summary": "Lists all vpcs for a cloud account",
        "description": "Returns all vpcs for a cloud account",
        "operationId": "AllVPCs",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllVPCsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/subnets": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "region",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "vpc",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource_group_name",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["subnets"],
        "summary": "Lists all subnets for a cloud account",
        "description": "Returns all subnets for a cloud account",
        "operationId": "AllSubnets",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllSubnetsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/public_ips": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "region",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "vpc",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource_group_name",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["publicIps"],
        "summary": "Lists all public IPs for a cloud account",
        "description": "Returns all public IPs for a cloud account",
        "operationId": "AllPublicIps",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllPublicIpsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/network_security_groups": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "region",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "vpc_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["securityGroups"],
        "summary": "Lists all securityGroups for a cloud account",
        "description": "Returns all securityGroups for a cloud account",
        "operationId": "AllSecurityGroups",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllSecurityGroupsResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/execution_roles": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["executionRoles"],
        "summary": "Lists all executionRoles for a cloud account",
        "description": "Returns all executionRoles for a cloud account",
        "operationId": "AllExecutionRoles",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllExecutionRolesResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/certificates": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "region",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "resource_group_name",
          "in": "query",
          "required": false,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "app_gateway_id",
          "in": "query",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["certificates"],
        "summary": "Lists all certificates for a cloud account",
        "description": "Returns all certificates for a cloud account",
        "operationId": "AllCertificates",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllCertificatesResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/hosted_zones": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloud_account_id",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "region",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        },
        {
          "name": "domain",
          "in": "query",
          "required": false,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["hostedZones"],
        "summary": "Lists all hostedZones for a cloud account",
        "description": "Returns all hostedZones for a cloud account",
        "operationId": "AllHostedZones",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllHostedZonesResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/cft_path": {
      "parameters": [
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "accountIdentifier",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "tags": ["cftPath"],
        "summary": "Cloud formation template path",
        "description": "Gets the cloud formation template path",
        "operationId": "GetCloudFormationTemplate",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CFTResponse"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/accounts/{account_id}/scaling_groups": {
      "post": {
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cloud_account_id",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountIdentifier",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ASGResourceFilterBody"
            }
          }
        ],
        "tags": ["allASGs"],
        "summary": "Get all auto scaling groups",
        "description": "Get all auto scaling groups satisfying the given filter",
        "operationId": "GetAllASGs",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AllASGResponse"
            }
          },
          "400": {
            "description": "Invalid"
          }
        }
      }
    },
    "/app_id": {
      "get": {
        "tags": ["appId"],
        "summary": "Get Azure application ID",
        "description": "Get Azure application ID",
        "operationId": "GetAppId",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AppIdResponse"
            }
          },
          "400": {
            "description": "Invalid"
          }
        }
      }
    }
  },
  "definitions": {
    "DeleteAccessPointPayload": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "with_resources": {
          "type": "boolean"
        }
      }
    },
    "Service": {
      "type": "object",
      "required": ["name", "fulfillment", "kind", "org_id", "cloud_account_id"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        },
        "account_identifier": {
          "type": "string"
        },
        "project_id": {
          "type": "string"
        },
        "fulfilment": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "cloud_account_id": {
          "type": "string"
        },
        "idle_time_mins": {
          "type": "integer",
          "format": "int64"
        },
        "host_name": {
          "type": "string"
        },
        "health_check": {
          "type": "object",
          "oneOf": [
            {
              "$ref": "#/definitions/HealthCheck"
            },
            {
              "type": "null"
            }
          ]
        },
        "custom_domains": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "match_all_subdomains": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "routing": {
          "type": "object",
          "$ref": "#/definitions/RoutingData"
        },
        "opts": {
          "required": true,
          "type": "object",
          "$ref": "#/definitions/Opts"
        },
        "created_at": {
          "type": "string"
        },
        "access_point_id": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/ServiceMetadata"
        },
        "status": { "type": "string" }
      }
    },
    "ServiceMetadata": {
      "type": "object",
      "properties": {
        "cloud_provider_details": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "target_group_details": {
          "type": "object"
        },
        "service_errors": {
          "type": "array",
          "required": false,
          "items": {
            "$ref": "#/definitions/ServiceError"
          }
        },
        "kubernetes_connector_id": {
          "type": "string"
        }
      }
    },
    "ServiceError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "ServiceDep": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "int",
          "format": "int64"
        },
        "dep_id": {
          "type": "int",
          "format": "int64"
        },
        "delay_secs": {
          "type": "int"
        }
      }
    },
    "ServiceHealthResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "items": {
            "error": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "target_url": {
              "type": "string"
            }
          }
        }
      }
    },
    "SaveServiceRequest": {
      "type": "object",
      "properties": {
        "deps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDep"
          }
        },
        "service": {
          "type": "object",
          "$ref": "#/definitions/Service"
        },
        "apply_now": {
          "type": "boolean"
        }
      }
    },
    "FirewallRule": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "required": true
        },
        "protocol": {
          "type": "string",
          "required": true
        },
        "to": {
          "type": "string",
          "required": true
        }
      }
    },
    "NetworkSecurityGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "inbound_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        },
        "outbound_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          }
        }
      }
    },
    "SecurityGroupsOfInstancesResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "$ref": "#/definitions/NetworkSecurityGroupForInstanceArray"
        }
      }
    },
    "NetworkSecurityGroupForInstanceArray": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "object",
          "$ref": "#/definitions/NetworkSecurityGroup"
        }
      }
    },
    "Resource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "availability_zone": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "launch_time": {
          "type": "string"
        },
        "ipv4": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "private_ipv4": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "description": "tag key as attribute key and tag value as attribute value"
        },
        "resource_type": {
          "type": "string"
        },
        "provider_name": {
          "type": "string"
        },
        "is_spot": {
          "type": "boolean"
        },
        "platform": {
          "type": "string"
        },
        "cloud_account_id": {
          "type": "number"
        },
        "metadata": {
          "type": "object"
        },
        "provider_type": {
          "type": "string"
        }
      }
    },
    "ResourcesResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      }
    },
    "AllResourcesOfAccountResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      }
    },
    "SessionReportRow": {
      "type": "object",
      "properties": {
        "end": {
          "type": "string"
        },
        "start": {
          "type": "string"
        },
        "hours": {
          "type": "number"
        }
      }
    },
    "SessionReportRows": {
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SessionReportRow"
          }
        }
      }
    },
    "GatewaySessionReportResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "$ref": "#/definitions/SessionReportRows"
        }
      }
    },
    "ResourceFilterBody": {
      "type": "object",
      "properties": {
        "Text": {
          "type": "string",
          "description": "String representation of TOML filter"
        }
      }
    },
    "SGResourceFilterBody": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "String representation of TOML filter"
        }
      }
    },
    "ReportRequestBody": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string"
        },
        "report_name": {
          "type": "string"
        },
        "service_ids": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "timezone": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "ServiceUsageRecord": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "number"
        },
        "path": {
          "type": "string"
        },
        "session_id": {
          "type": "string"
        },
        "idle_time_mins": {
          "type": "number"
        },
        "created_at": {
          "type": "string"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "org_id": {
          "type": "number"
        },
        "created_by": {
          "type": "number"
        },
        "service_provider": {
          "type": "string"
        }
      }
    },
    "AllAccountsResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        }
      }
    },
    "ServicesResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          }
        }
      }
    },
    "ServiceUsageResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ServiceUsageRecord"
      }
    },
    "ServiceSaveRequest": {
      "type": "object",
      "properties": {
        "service": {
          "type": "object",
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceStats": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "number"
        },
        "idle_time_percentage": {
          "type": "number"
        },
        "down_time_mins": {
          "type": "number"
        },
        "total_time_mins": {
          "type": "number"
        }
      }
    },
    "ServiceDepTree": {
      "type": "object",
      "properties": {
        "service": {
          "type": "object",
          "$ref": "#/definitions/Service"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDepTree"
          }
        }
      }
    },
    "ServiceStatsResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "object",
          "$ref": "#/definitions/ServiceStats"
        },
        "dep_tree": {
          "type": "object",
          "$ref": "#/definitions/ServiceDepTree"
        }
      }
    },
    "InstanceBasedRoutingData": {
      "type": "object",
      "properties": {
        "filter_text": {
          "type": "string"
        },
        "scale_group": {
          "type": "object",
          "$ref": "#/definitions/ASGMinimal"
        }
      }
    },
    "HealthCheck": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "int"
        },
        "timeout": {
          "type": "int"
        }
      }
    },
    "Opts": {
      "type": "object",
      "properties": {
        "preserve_private_ip": {
          "type": "boolean"
        },
        "delete_cloud_resources": {
          "type": "boolean"
        },
        "always_use_private_ip": {
          "type": "boolean"
        },
        "access_details": {
          "type": "object"
        },
        "hide_progress_page": {
          "type": "boolean"
        }
      }
    },
    "PortConfig": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string"
        },
        "target_protocol": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "target_port": {
          "type": "integer"
        },
        "server_name": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "redirect_url": {
          "type": "string"
        },
        "routing_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoutingRule"
          }
        }
      }
    },
    "ServiceDependency": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "number"
        },
        "dep_id": {
          "type": "number"
        },
        "delay_secs": {
          "type": "number"
        }
      }
    },
    "ServiceDefinitionByIDResponse": {
      "type": "object",
      "properties": {
        "service": {
          "type": "object",
          "$ref": "#/definitions/Service"
        },
        "deps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDependency"
          }
        }
      }
    },
    "RoutingRule": {
      "type": "object",
      "properties": {
        "path_match": {
          "type": "string"
        }
      }
    },
    "RoutingData": {
      "type": "object",
      "properties": {
        "instance": {
          "type": "object",
          "$ref": "#/definitions/InstanceBasedRoutingData"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortConfig"
          }
        },
        "lb": {
          "type": "string"
        },
        "k8s": {
          "type": "object",
          "properties": {
            "RuleJson": {
              "type": "string"
            },
            "ConnectorID": {
              "type": "string"
            }
          }
        },
        "custom_domain_providers": {
          "type": "object"
        }
      }
    },
    "ServiceSavings": {
      "type": "object",
      "properties": {
        "potential_cost": {
          "type": "number",
          "format": "float"
        },
        "actual_cost": {
          "type": "number",
          "format": "float"
        },
        "actual_savings": {
          "type": "number",
          "format": "float"
        },
        "savings_percentage": {
          "type": "number",
          "format": "float"
        },
        "actual_hours": {
          "type": "number",
          "format": "float"
        },
        "idle_hours": {
          "type": "number",
          "format": "float"
        },
        "usage_date": {
          "type": "string"
        }
      }
    },
    "ServiceSavingsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "$ref": "#/definitions/ServiceSavings"
        }
      }
    },
    "ServiceSavingsGraphResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceSavings"
          }
        }
      }
    },
    "ServiceRequest": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "ServiceRequestsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceRequest"
          }
        }
      }
    },
    "ServiceLog": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "ServiceLogsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ServiceLog"
          }
        }
      }
    },
    "AccessPointMeta": {
      "type": "object",
      "properties": {
        "error": { "type": "string" },
        "certificate_id": { "type": "string" },
        "security_groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dns": {
          "type": "object",
          "properties": {
            "route53": {
              "type": "object",
              "properties": {
                "hosted_zone_id": {
                  "type": "string"
                }
              }
            },
            "others": {
              "type": "string"
            }
          }
        },
        "albArn": {
          "type": "string"
        },
        "resource_group": {
          "type": "string"
        },
        "fe_ip_id": {
          "type": "string"
        },
        "subnet_id": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "app_gateway_id": {
          "type": "string"
        },
        "subnet_name": { "type": "string" },
        "fe_ip_name": { "type": "string" },
        "certificate": {
          "type": "object",
          "$ref": "#/definitions/CertificateData"
        },
        "func_region": {
          "type": "string"
        }
      }
    },
    "CertificateData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "AccessPoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "cloud_account_id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        },
        "project_id": {
          "type": "string"
        },
        "host_name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "vpc": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": ["created", "submitted", "errored"]
        },
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/AccessPointMeta"
        },
        "subnets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "security_groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateAccessPointResponse": {
      "properties": {
        "response": {
          "type": "object",
          "$ref": "#/definitions/AccessPoint"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object"
        }
      }
    },
    "ListAccessPointResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessPoint"
          }
        }
      }
    },
    "Region": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      }
    },
    "ResourceGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "type": {
          "type": "string",
          "required": true
        }
      }
    },
    "AllRegionsResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "AllResourceGroupsResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceGroup"
          }
        }
      }
    },
    "Vpc": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      }
    },
    "AllVPCsResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vpc"
          }
        }
      }
    },
    "Subnet": {
      "type": "object",
      "properties": {
        "az_id": {
          "type": "string",
          "required": true
        },
        "id": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      }
    },
    "PublicIp": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "required": true
        },
        "id": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "address": {
          "type": "string",
          "required": true
        }
      }
    },
    "ExecutionRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      }
    },
    "Certificate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      }
    },
    "AllSubnetsResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          }
        }
      }
    },
    "AllPublicIpsResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicIp"
          }
        }
      }
    },
    "AllSecurityGroupsResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkSecurityGroup"
          }
        }
      }
    },
    "GetAccessPointResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "$ref": "#/definitions/AccessPoint"
        }
      }
    },
    "AllExecutionRolesResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExecutionRule"
          }
        }
      }
    },
    "AllCertificatesResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Certificate"
          }
        }
      }
    },
    "AllHostedZonesResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostedZone"
          }
        }
      }
    },
    "CumulativeSavings": {
      "type": "object",
      "properties": {
        "days": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": true
        },
        "potential_cost": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "required": true
        },
        "actual_cost": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "required": true
        },
        "savings": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          },
          "required": true
        },
        "total_savings": {
          "type": "number",
          "format": "float",
          "required": true
        },
        "total_potential": {
          "type": "number",
          "format": "float",
          "required": true
        },
        "total_cost": {
          "type": "number",
          "format": "float",
          "required": true
        },
        "savings_percent": {
          "type": "number",
          "format": "float",
          "required": true
        }
      }
    },
    "CumulativeSavingsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "$ref": "#/definitions/CumulativeSavings"
        }
      }
    },
    "HostedZone": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      }
    },
    "MaptoDNSBody": {
      "type": "object",
      "properties": {
        "dns_provider": {
          "type": "string"
        },
        "details": {
          "type": "object"
        }
      }
    },
    "AccessPointActivityResponse": {
      "properties": {
        "response": {
          "type": "object",
          "$ref": "#/definitions/ServiceUsageRecord"
        }
      }
    },
    "CFTResponse": {
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          }
        }
      }
    },
    "ServiceDiagnosticsResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "name": {
              "type": "string"
            },
            "success": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          }
        }
      }
    },
    "ALBAccessPointCore": {
      "properties": {
        "name": {
          "type": "string"
        },
        "albARN": {
          "type": "string"
        },
        "security_groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vpc": {
          "type": "string"
        }
      }
    },
    "AzureAccessPointCore": {
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "fe_ip_id": { "type": "string" },
        "fe_ip_name": { "type": "string" },
        "region": { "type": "string" },
        "resource_group": { "type": "string" },
        "size": { "type": "string" },
        "size_name": { "type": "string" },
        "subnet_id": { "type": "string" },
        "subnet_name": { "type": "string" },
        "vpc": { "type": "string" },
        "vpc_name": { "type": "string" }
      }
    },
    "AccessPointCore": {
      "properties": {
        "type": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "oneOf": [
            {
              "$ref": "#/definitions/ALBAccessPointCore"
            },
            {
              "$ref": "#/definitions/AzureAccessPointCore"
            }
          ]
        }
      }
    },
    "AccessPointCoresResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessPointCore"
          }
        }
      }
    },
    "ASGResourceFilterBody": {
      "type": "object",
      "properties": {
        "Text": {
          "type": "string",
          "description": "String representation of TOML filter"
        }
      }
    },
    "AllASGResponse": {
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ASGMinimal"
          }
        }
      }
    },
    "AppIdResponse": {
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "app_id": { "type": "string" }
          }
        }
      }
    },
    "ASGMinimal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "desired": {
          "type": "integer"
        },
        "min": {
          "type": "integer"
        },
        "max": {
          "type": "integer"
        },
        "on_demand": {
          "type": "integer"
        },
        "spot": {
          "type": "integer"
        },
        "mixed_instance": {
          "type": "boolean"
        },
        "cloud_account_id": {
          "type": "string"
        },
        "provider_name": {
          "type": "string"
        },
        "target_groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetGroupMinimal"
          }
        },
        "region": {
          "type": "string"
        },
        "availability_zones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "meta": {
          "type": "object"
        }
      }
    },
    "TargetGroupMinimal": {
      "typ": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "protocol": {
          "type": "string"
        },
        "vpc": {
          "type": "string",
          "required": false
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
