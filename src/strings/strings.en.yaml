---
global:
  harness: Harness # Name of the company
  deploymentText: Deployment
  deploymentsText: Deployments
  executionText: Execution
  executionsText: Executions
  pipelines: Pipelines
  buildText: Build
  buildsText: Builds
  execution:
    breadcrumbTitle: Deployments
    pipelineIdentifierText: '(Execution ID: {{planExecutionId}})' # Text for Pipeline Identifier
    triggerType: # text for trigger types
      MANUAL: Manually
      WEBHOOK: Webhook
  executionStatus:
    Failed: FAILED
    Success: SUCCESS
    Aborted: ABORTED
    Error: ERROR
    Paused: PAUSED
    Pausing: PAUSING
    Waiting: WAITING
    Aborting: ABORTING
    Running: RUNNING
    Queued: QUEUED
    Skipped: SKIPPED
    Starting: STARTING
    Rejected: REJECTED
    Expired: EXPIRED
    Suspended: SUSPENDED
    NotStarted: NOT STARTED
  executionList:
    servicesDeployedText: 'Services Deployed ({{size}})'
  save: 'Save'
  cancel: 'Cancel'
  search: 'Search'
  showAll: 'Show All'
  categories: 'Categories'
  noSearchResultsFoundPeriod: 'No results found.'
  recentlyUsed: 'Recently Used'
pipeline-execution-ci:
  execution:
    pipelineIdentifierText: '(Build ID: {{planExecutionId}})' # Text for Pipeline Identifier
pipeline-execution-cd: {}
pipeline-triggers:
  aboutTriggers: 'Triggers are used to automate the execution of pipelines based on some event like new artifact/manifest, or run on a schedule or an external webhook.'
  addNewTrigger: 'Add New Trigger'
  newTrigger: '+ New Trigger'
  onWebhookLabel: 'On Webhook Event'
  onNewArtifactLabel: 'On New artifact'
  onScheduleLabel: 'On Schedule'
  triggerConfigurationLabel: 'Trigger Configuration'
  conditionsLabel: 'Conditions'
  pipelineInputLabel: 'Pipeline Input'
repo-provider:
  bitbucketLabel: 'BitBucket'
  customLabel: 'Custom'
  githubLabel: 'GitHub'
  gitlabLabel: 'GitLab'
pipeline:
  steps:
    gcr:
      title: 'GCR Step'
      loading: 'Loading...'
      optionalConfiguration: 'OPTIONAL CONFIGURATIONS'
      settings: 'Settings'
      addSetting: '+ Add Setting'
      setContainerResources: 'Set container Resources'
      setContainerResourcesTooltip: 'Information'
      stepNameLabel: 'Step Name'
      descriptionLabel: 'Description'
      dockerfileLabel: 'Dockerfile'
      connectorLabel: 'Connector'
      connectorPlaceholder: 'Select'
      registryLabel: 'Registry'
      repoLabel: 'Repository'
      tagsLabel: 'Tags'
      contextLabel: 'Context'
      argsLabel: 'Arguments'
      cacheFromLabel: 'Cache From'
      labelsLabel: 'Labels'
      labelsKeyPlaceholder: 'Key'
      labelsValuePlaceholder: 'Value'
      addLabel: '+ Label'
      targetLabel: 'Target'
      autoTagLabel: 'Auto-Tag'
      autoTagSuffixLabel: 'Auto-Tag Suffix'
      limitMemoryLabel: 'Limit Memory'
      limitMemoryPlaceholder: '512'
      limitCPULabel: 'Limit CPU'
      limitCPUPlaceholder: '1'
      limitMemoryUnitMiLabel: 'Mi'
      limitMemoryUnitGiLabel: 'Gi'
      limitMemoryExample: 'Ex: 512 MiB, 1 GiB'
      limitCPUExample: 'Ex: 1'
