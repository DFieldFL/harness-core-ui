harness: Harness # Name of the company
signUp:
  signIn: 'Sign In'
  signUp: 'Sign Up'
  ssoButton: 'Single Sign-On'
  message:
    primary: 'Sign up for an account'
    secondary: 'and get ship done'
  form:
    emailLabel: '{{ $.email }}'
    emailPlaceholder: 'email@work.com'
    passwordPlaceholder: 8+ characters
  oAuth:
    signup: 'or sign up with'
    signin: 'or login with'
  disclaimer:
    initial: 'By signing up you agree to our '
    privacyPolicy: 'Privacy Policy'
    middle: ' and our '
    terms: 'Terms of Use'
  noAccount: 'No Account?'
signOut: Sign Out
connectorsLabel: Connectors
dashboardLabel: 'Dashboard'
regionLabel: 'Region'
createdBy: 'Created by'
ciCodebase: CI Codebase
featureFlagsText: Feature Flags
flag: Flag
newLabel: New
featureNA: This feature is not available as of now
logView: Log View
projectsText: Projects
enterNamePlaceholder: Enter name
orgsText: Organizations
getStarted: Get Started
projectLabel: Project
projectResources: Project Resources
adminFunctions: Adminstrative Functions
action: Action
functions: Functions
otherWorkloads: Other Workloads
multipleService: Multiple Services
orgLabel: Organization
editPipeline: Edit Pipeline
users: Users
roles: Roles
newRole: New Role
editRole: Edit Role
created: Created
create: Create
resourceGroups: Resource Groups
modules: Modules
account: 'Account'
repository: 'Repository'
location: LOCATION
timeMinutes: min
whenCondition: When Condition
serviceOrServices: 'Service(s)'
environmentOrEnvironments: 'Environment(s)'
artifactOrArtifacts: 'Artifact(s)'
artifactRepository: ARTIFACT REPOSITORY
more: '+{{number}} more'
addFile: Add File
email: Email
yes: 'Yes'
no: 'No'
or: or
restart: 'Restart'
invalidText: Invalid
noData: No Data
members: Members
wip: Work in progress
tagRegex: Tag Regex
plusNumber: + {{number}}
of: of
step: Step
parallelSteps: Parallel Steps
stepGroup: Step Group
changeHistory: Change History
entity: Entity
entities: Entities
enableGitExperience: Enable Git Experience
gitExperienceNewUserText: Git Experience allows you to store the Pipeline and other Harness entities in Git with your code. With this method, Git is the single source of truth for all your code and configurations.
primaryBranch: Primary branch
selectGitProvider: Select your Git Provider
selectGitConnectorTypeLabel: 'Select the connector to your {{type}}'
lastTested: Last Tested
lastUpdated: Last Updated
lastConnectionSuccess: Last time connection is successful
lastActivity: Last Activity
noDetails: No details found
connecectorHelpHeader: What is a Connector?
connecectorHelpText: Connectors integrate Harness with your cloud platforms, codebase and artifact repos, and collaboration and monitoring tools.
connectivityStatus: Connectivity Status
lastStatusCheckAt: 'Last status check at '
lastSuccessfulStatusCheckAt: 'Last successful status check at '
noReferencesData: 'There are no references of this Connector.'
connectorCreated: Connector Created
fieldRequired: '{{field}} is a required field'
deploymentText: Deployment
deploymentTypeText: Deployment Type
cloudCostsText: Cloud Costs
changeVerificationText: Change Verifications
deploymentsText: Deployments
dockerRegistry: 'Docker Registry'
executionText: Execution
executionsText: Executions
executionHeaderText: Execution History
runPipelineText: Run
rollbackLabel: Rollback
addStage: Add Stage
templates: Templates
rollbackSteps: Rollback Steps
noConnectorFound: No Connector Found
noUserGroupsFound: No User Groups found
saveConnectorSuccess: Connector saved successfully
resources: 'Resources'
kubernetesText: Kubernetes
kubernetesDirectText: Kubernetes Direct
connector: Connector
profile: Profile
taskId: 'TaskId: {{id}}'
preferences: Preferences
cloudProviders: Cloud Providers
artifactRepositories: Artifact Repositories
codeRepositories: Code Repositories
ticketingSystems: Ticketing Systems
monitoringAndLoggingSystems: Monitoring and Logging Systems
secretManagers: Secret Managers
connection: Connection
refrencedBy: Referenced by
activityHistoryLabel: Activity History
connectionMode: Connection Mode
credType: Credential Type
serviceDeploymentTypes:
  kubernetes: '{{$.kubernetesText}}'
  amazonEcs: '{{$.delegate.cardData.amazonECS.name}}'
  amazonAmi: AWS AMI
  awsCodeDeploy: CodeDeploy
  winrm: WinRM
  awsLambda: AWS Lambda
  pcf: PCF
  ssh: Secure Shell
  deployDifferentLabel: Deploy different service
noDeploymentText: Your Pipeline does not have any executions yet. Click the button below to run a pipeline.
noBuildsText: Your account does not have any builds yet. Click the button below to run a pipeline.
newConnector: 'New Connector'
thisConnectorIsSavedAs: 'Selected Connector'
errorTitle: Something went wrong...
errorSubtitle: This error has been reported and we are looking into it with high priority.
errorHelp: to continue, this will remove all unsaved changes.
errorTag: Error fetching tags
deleteError: This resource could not be deleted
please: Please
clickHere: ' click here '
blueGreen: BlueGreen
primary: Primary
canary: Canary
changes: Changes
change: Change
events: Events
details: Details
test: Test
enable: Enable
runTestsArgsInfo: The arguments to be passed to the buildTool. For maven, it will be a goal
packagesLabel: Packages
packagesInfo: 'List of source code package prefixes separated by comma. E.g. com.company., io.company., migrations.'
testAnnotationsLabel: Test Annotations
testAnnotationsInfo: 'List of test annotations used in unit testing. They should be separated by comma. Any method annotated with this will be treated as test method. The defaults are: org.junit.Test, org.junit.jupiter.api.Test, org.testng.annotations.Test'
runOnlySelectedTestsLabel: Run only selected tests
buildToolLabel: Build Tool
buildToolInfo: Build automation tool
languageLabel: Language
languageInfo: The programming language of the source code to build
reset: Reset
archiveFormat: Archive Format
archiveFormatInfo: Select archive format. Default is tar
failIfKeyNotFound: Fail If Key Doesn’t exist
override: Override Cache
pathStyle: Path Style
risk: Risk
error: Error
active: Active
inactive: Inactive
health: Health
changeSource: Change Source
monitoringSource: Monitoring Source
sensitivity: Sensitivity
pipelines: Pipelines
inputs: Inputs
commits: Commits
tests: Tests
pipelineBreadcrumb: '{{$.pipelines}}'
performance: Performance
quality: quality
infrastructureText: Infrastructure
infrastructureTypeText: Infrastructure Type
update: Update
visual: VISUAL
yaml: YAML
invalidYaml: YAML is invalid. Please fix the issues to proceed.
editDetails: Edit Details
verificationJobs: Verification Jobs
abort: Abort
conditions: Conditions
repositories: Repositories
addRepository: Add Repository
gitManagement: Git Management
gitBranch: Git Branch
addStep: Add Step
addStepGroup: Add Step Group
gitTag: Git Tag
tbd: TBD
color: Color
applyChanges: Apply Changes
createViaYaml: Create via YAML Builder
saveAndPublish: Save and Publish
unsavedChanges: Unsaved changes
status: Status
start: Start
seeAll: See All
filePaths: File Paths
submit: Submit
previous: Previous
dateLabel: Date
timeLabel: Time
services: Services
token: Token
artifacts: Artifacts
manifests: Manifests
environments: Environments
servicesWithCount: '{{ $.services }} ({{ count }})'
buildText: Build
pipelineStudio: Pipeline Studio
stages: Stages
buildsText: Builds
newService: New Service
editService: Edit Service
newEnvironment: New Environment
editEnvironment: Edit Environment
envType: Environment Type
production: '{{$.common.production}}'
nonProduction: Non Production
primaryArtifactText: Primary Artifact
artifactDisplay: '{{image}} (tag: #{{tag}})'
noArtifact: No Artifact
sidecarArtifactText: Sidecar Artifact
sidecar: Sidecar
sidecarsText: '{{$.sidecar}}s'
manifestsText: Manifest
variablesText: Variables
fileFolderPathText: File/Folder Path
chartPath: Chart Path
pluginPath: Kustomize plugin path
addFileText: + Add File
lastExecutionTs: 'Last Run'
lastRunAtDate: '{{$.lastExecutionTs}}: '
lastRunExecutionNever: '{{$.lastExecutionTs}}: {{$.pipelineSteps.pullNeverLabel}}'
emptyDeployments: _ _ _ _ _ _
recentActivity: Recent Activity
overrideSets:
  createOverrideSet: Create Override Set
  overrideSetPlaceholder: Enter override set name
  overrideSetError: Override Set cannot be empty
  createOverrideSetPlus: + Create new override set
  configure: 'Configure pre-defined override sets (Advanced)'
  overrideSetInfo: Override sets provide flexibility when specifying the service configuration. It can be used when stages requires different configuration from the initial specifications.
newUser: New User
allNotificationFormat: All Notification Format
lastUpdatedSort: '{{$.lastUpdated}}'
AZ09: A - Z, 0 - 9
ZA90: Z - A, 9 - 0
addOverrideSet: + Add Predefined Set
newArtifactServer: New Artifact Server
clickToCopy: Click to copy
copiedToClipboard: Copied to clipboard
multipleFilesHelpText:
  'Multiple files can be overlaid together. They are applied in the order specified - first one gets
  applied first, and the subsequent ones get layered in the order and overrides any previously
  specified values.'
errorSummaryText: Error Summary
errorDetails: Error Details
and: 'And'
na: N/A
all: All
plus: +
passed: Passed
failed: Failed
success: Success
inProgress: In Progress
todo: TODO - implement this
identifier: 'Identifier'
name: Name
add: Add
overview: Overview
reinstall: Reinstall
edit: Edit
delete: Delete
archive: Archive
select: Select
selectStage: Select a stage
verify: Verify
done: Done
save: Save
back: Back
next: Next
finish: Finish
continue: Continue
addPipeline: + Pipeline
cancel: Cancel
close: Close
duplicate: Duplicate
errors: Errors
loading: Loading...
confirm: Confirm
confirmation: Confirmation
retry: Retry
search: Search
deleted: deleted
showAll: Show All
source: Source
kind: Kind
reason: Reason
message: Message
viewJSON: View JSON
creationTimestamp: Creation Timestamp
categories: Categories
plaintext: Plaintext
encryptedFile: Encrypted File
encrypted: Encrypted
newNotification: New Notification
editNotification: Edit Notification
addNotification: + Add Notification
noSearchResultsFoundPeriod: No results found.
createOrSelectSecret: Create or Select a Secret
description: Description
optionalField: '{{name}} (optional)'
recentlyUsed: Recently Used
applications: Applications
stageDetails: Stage Details
stageOverview: Stage Overview
stageNameLabel: Stage Name
stageName: 'Stage: {{ name }}'
tagsLabel: Tags
tagLabel: Tag
tagsInfo: Specify one or more tags for the Docker image
whatToDeploy: What would you like to deploy?
removeLabel: 'remove'
keyLabel: Key
valueLabel: Value
commandLabel: Command
summary: Summary
permissions: Permissions
activityLog: Activity Log
selectAnExistingConnector: Select an existing Connector
authentication: Authentication
preCommandLabel: PreCommand
preCommandInfo: Commands used for setting up the environment before running the tests
postCommandLabel: PostCommand
postCommandInfo: Commands used for cleaning up the environment after running the tests
consoleView: Console View
commandInfo: Posix shell script executed inside the container. The script is invoked as if it were the container’s entrypoint
commandPlaceholder: |
  npm install
  npm test
repositoryUrlLabel: Repository URL
UrlLabel: URL
methodLabel: Method
requestBodyLabel: Request Body
assertionLabel: Assertion
outputLabel: Output
typeLabel: Type
variableLabel: Variable
variableNameLabel: Variable Name
imageLabel: Image
imagePlaceholder: maven:3.6.3-jdk-8
pluginImagePlaceholder: plugins/slack
pluginImageInfo: The name of the Plugin Docker image. The image name should include the tag and will default to the latest tag if unspecified. You can use any docker image from any docker registry, including docker images from private registries
dependencyImagePlaceholder: mysql:5
imageInfo: The name of the Docker image to use to run commands on. The image name should include the tag and will default to the latest tag if unspecified. You can use any docker image from any docker registry, including docker images from private registries.
imageNameLabel: Image Name
imageNameInfo: The name of the image that will be pushed to the target container registry.
encryptedKeyLabel: Encrypted Key
environment: 'Environment'
environmentVariables: 'Environment Variables'
environmentVariablesInfo: Environment variables injected into the container to be used in the “command” property
dependencyEnvironmentVariablesInfo: Environment variables injected into the container
service: 'Service'
plusAdd: '+ Add'
idLabel: 'ID: {{id}}'
nameLabel: 'Name: {{name}}'
descriptionLabel: 'Description: {{description}}'
launchStudio: Launch Studio
viewExecutions: View Executions
entryPointLabel: 'Entry Point'
entryPointInfo: Overrides the image ENTRYPOINT
argsLabel: 'Arguments'
argsInfo: Overrides the image COMMAND
dependencyNameLabel: 'Dependency Name'
cloneCodebaseLabel: 'Clone Codebase'
allowedValues: 'Allowed values'
serviceAccount: Service Account
usernamePassword: 'Username and Password'
usernameToken: 'Username and Token'
kerberos: 'Kerberos'
secureToken: 'Secure Token'
anonymous: 'Anonymous (no credentials required)'
saveAndContinue: 'Save and Continue'
errorWhileSaving: 'Error occurred saving'
codebase: 'Codebase'
addressErrorFields: 'Please address all error fields before submitting.'
invalidYamlText: 'You have provided an invalid or empty yaml, please provide a valid yaml for the pipeline'
metricPacks: 'Metric Packs'
review: 'Review'
enabledLabel: 'Enabled'
activity: 'Activity'
store: Store
canvasButtons:
  zoomIn: Zoom In
  zoomOut: Zoom Out
  zoomToFit: Zoom to Fit
createPipeline:
  pipelineNameRequired: Pipeline Name is a required field
helmVersion: Helm Version
executionStrategy:
  strategies:
    blueGreen: With Blue/Green Deployment, two identical environments called blue (staging) and green (production) run simultaneously with different versions or service/artifact. QA and UAT are typically done on the blue environment. When satisfied, traffic is flipped (via a load balancer) from the green environment (current version) to the blue environment (new version). You can then decommission the old environment once deployment is successful.
    rolling: In a Rolling Deployment Strategy, the deployed artifact will be spun up incrementally until the desired count is met. As new ones spin up, the older version gets terminated.
    canary: In a Canary Deployment, the new artifact is deployed in the target environment and is incrementally updated based on the testing and verification in each phase.
    default: With a blank canvas, you get to orchestrate your deployment with any combination of steps from the palette. It allows maximum flexibility - only recommended for advanced users.
  preview: 'Preview'
  strategyType: 'Common'
selectProduct: 'Select Product'
selectApplication: 'Select Application'
selectProject: 'Select a Project'
selectResource: Select Resource
closeSelection: 'Close Selection'
mapApplications: 'Map Applications to Harness Services'
mapApplicationsToEnvs: Map Applications to Harness Environments
lastSevenDays: 'last 7 days'
total: 'Total'
credentials: Credentials
editCredentials: Edit Credentials
createProject: '+ Create Project'
pickProject: Pick a project and drill down to see your information.
orSelectExisting: Or select an existing project
stageConfirmationText: 'Are you sure you want to delete stage "{{ name }} [Id: {{id}}]"?'
deletePipelineStage: 'Delete Pipeline Stage.'
deleteStageSuccess: 'Pipeline Stage Successfully removed.'
deleteStageFailure: 'Pipeline Stage cannot be removed.'
repositoryType: 'Repository Type'
commonError: Error occurred while fetching/saving the data
selectServer: 'Select Server'
stepPalette:
  title: 'Step Library'
  subTitle: 'All Steps'
  noSearchResultsFound: 'No results found. Please try another step name.'
  loadingSteps: Loading steps...
  selectStep: 'Select a Step'
  library: 'Library'
  others: 'Others'
  infrastructureProvisioners: 'Infrastructure Provisioners'
  showAllSteps: 'Show All Steps'
  searchPlaceholder: 'Search Step'
orgDetails:
  accessControlDescription: Manage users, create user groups and assign roles to your team. Fine tune your permissions with custom roles.
  governanceDescription: Precision control over all your Harness resources.
  resourcesDescription: Manage connectors, secrets, delegates, templates here. Setup account level Git Experience here.
  gitSyncDescription: Connect to your Git repository and track your changes
createSecretYAML:
  create: '{{ $.create }}'
  newSecret: New Secret
  createSecret: Create Secret from YAML
  secretCreated: Secret created successfully
  invalidSecret: Invalid Secret configuration
formValidation:
  name: 'Name can only contain alphanumerics, _ and -'
filters:
  filterVisibility: Who can view and edit the filter?
  name: Filter Name
  visibileToOnlyMe: Only me
  visibleToEveryone: Everyone
  apply: Apply
  filtersLabel: Filters
  saveFilter: Save Filter
  clearAll: Clear All
  newFilter: New Filter
  typeFilterName: Type filter name
  nameRequired: filter name cannot be empty
  visibilityRequired: filter visibility needs to be specified
  deleteFilterForUser: Deleting a private filter will remove it from your saved filter list. This action can not be undone.
  deleteFilterForEveryone: Deleting a shared filter will remove it for all users who has access to the project. This action can not be undone.
  confirmDelete: Confirm Deletion
  filterDeleted: filter deleted.
  filterDuplicated: filter duplicated.
  selectFilter: Select a saved filter
  invalidSelection: Invalid selection
  visibilityTitle: This filter is visible to only me.
  invalidCriteria: Invalid or no filter criteria specified.
  noDataFound: No data found as per the applied filter(s).
  noFilterFound: No filter found.
  executions:
    pipelineName: Pipeline Name
    buildType: Build Type
    pullOrMergeRequest: Pull Request / Merge Request
    tagPlaceholder: Enter tag
    selectBuildTypeLabel: Select a build type
customText: '{{text}}'
adminLabel: 'Admin'
collaboratorsLabel: 'Collaborators'
viewDetails: 'View Details'
startedAt: 'Started at:'
endedAt: 'Ended at:'
lastUpdatedBy: Last Updated By
loggedAt: 'Logged at {{time}}'
delegateLabel: 'Delegate:'
order: Order
artifactsSelection:
  artifactDetails: Artifact Details
  existingDocker:
    sidecarId: Sidecar Identifier
    sidecarIdPlaceholder: Enter artifact identifier
    imageNamePlaceholder: Enter Image Path
    imageName: ' Image path'
    enterTagRegex: Enter Tag Regex
  validation:
    imagePath: Image path is a required field
    region: Region is an required field
    tag: Tag is required
    tagRegex: Tag Regex is required
    sidecarId: Sidecar identifier is required field
inputSets:
  inputSetLabel: Input Set
  editTitle: 'Edit Input Set: {{name}}'
  editOverlayTitle: 'Edit Overlay Input Set: {{name}}'
  newInputSet: + New Input Set
  addInputSetPlus: + Add Input Set
  newOverlayInputSet: New Overlay Input Set
  newInputSetLabel: New Input Set
  inputSetSaved: Input Set saved
  nameIsRequired: Input Set Name is Required field
  inputSetIsRequired: Input Set field cannot be empty
  inputSetName: Input set name
  overlaySetName: Overlay set name
  overlayInputSetSavedError: 'Error while saving Overlay InputSet'
  selectInputSets: Select Input Sets
  selectInputSetsHelp: Multiple input sets can be overlaid together. They are applied in the order specified - first one gets applied first, and the subsequent ones get layered in the order and overrides any previously specified values.
  overlayInputSetSaved: 'Overlay Input Set saved'
  inputSetSavedError: Error while saving InputSet
  searchInputSet: Search Input Set
  addInputSet: Add Input Set
  saveAsInputSet: Save as Input Set
  aboutInputSets: Input sets are collections of variables/values that should be provided to a pipeline before execution.
  confirmDeleteTitle: 'Delete {{type}}'
  overlayInputSet: Overlay Input Set
  inputFieldSummary: Input Field Summary
  selectPlaceholder: Add Input Set(s)
  noRecord: No Input Sets Created
  selectMultipleInputSets: select multiple input sets
  helpTextForMultiSelect: Selected inputs will be applied in the order listed. Drag to reorder the input sets.
  inputSetDeleted: 'Input Set "{{name}}" deleted'
  confirmDeleteText: 'Are you sure want to delete {{type}} "{{name}}"'
assessment: Assessment
workflowVariableInfo: 'Override existing variables or define new variables.'
manifestSelectionInfo: Specify the locations of the manifests for this service. Harness will fetch the manifests at the time of deployments. You can also store these manifests locally in the Harness file store.
duration: 'Duration:'
runPipelineForm:
  pipelineRunSuccessFully: Pipeline started successfully
  runPipelineFailed: Failed to run pipeline
  noRuntimeInput: No runtime inputs are required for the execution of this pipeline
  notifyOnlyMe: Notify only me about the status of the execution
skipped: 'Step has been skipped.'
skipCondition: 'Skip condition:'
skipConditionValidation: 'Skip condition is required.'
learnMore: Learn more
clipboardCopySuccess: Successfully copied to clipboard
clipboardCopyFail: Copy to clipboard has failed
skipConditionsTitle: Skip Conditions
skipConditionTitle: Skip Condition
skipConditionLabel: If the JEXL condition evaluates to true, skip this step
skipConditionStageLabel: If the JEXL condition evaluates to true, skip this stage
skipResourceVersion: 'Skip Resource Versioning'
skipConditionHelpText: |
  In the {{ $.common.jexlExpression }}, you could use any of the pipeline variables - including the output of any previous steps.
  Examples:
  <+steps.step1.output.result> == “success”
  <+environment.name> != “QA”
skipConditionText: |
  In the {{ $.common.jexlExpression }}, you could use any of the pipeline variables - including the output of any previous stages.
  Examples:
  <+steps.step1.output.result> == “success”
  <+environment.name> != “QA”
preRequisitesTitle: Pre-requisites
advancedTitle: Advanced
responseMapping: Response Mapping
scriptInputVariables: Script Input Variables
scriptOutputVariables: Script Output Variables
executionTarget: Execution Target
basic: Basic
stepConfiguration: Step Parameters
stepGroupConfiguration: Step Group Configuration
image: 'Image:'
createdAt: 'Created at:'
username: 'Username'
password: 'Password'
navigationYamlErrorTitle: Invalid Yaml Detected
navigationYamlError: You have provided an invalid yaml, navigating away will remove your changes
navigationCheckText: 'You have unsaved changes. Are you sure you want to leave this page without saving?'
navigationCheckTitle: 'Close without saving?'
continueWithoutSavingTitle: Continue without saving?
continueWithoutSavingText: 'You have unsaved changes. Are you sure you want to continue without saving?'
inputSetsText: 'Input Sets'
projectDescription: 'A Harness project allows you to logically group pipelines, corresponding environments and services.'
addProject: '+ Add Project'
noProjects: 'No Projects Found'
noRoles: No Roles Found
string: 'String'
number: 'Number'
secretType: 'Secret'
list: 'List'
map: 'Map'
HTTP: 'HTTP'
HTTPS: 'HTTPS'
SSH: 'SSH'
SSH_KEY: 'SSH Key'
version: Version
goToHome: Go To Home
governance: 'Governance'
runPipeline: Run Pipeline
generalSettings: 'General Settings'
accessControl: 'Access Control'
noPermission: You don't have permission to perform this action
templateLibrary: 'Template Library'
generic_errors:
  INVITE_EXPIRED: This invite link has expired
cdDashboard:
  welcome: Welcome to Continuous Delivery
  description: Deploy your services with blazing fast pipelines.
hours: hours
gitFetchTypes:
  fromBranch: 'Latest from Branch'
  fromCommit: 'Specific Commit ID'
snippets:
  copyToClipboard: Copy to Clipboard
  copied: Copied!
fetching: Fetching
somethingWentWrong: Something went wrong
saveChanges: Save Changes
projectSelector:
  placeholder: 'Start typing to search'
script: 'Script'
inline: 'Inline'
upload: Upload
remote: 'Remote'
resourcePage:
  title: RESOURCES
  connectors: '{{$.connectorsLabel}}'
  secrets: '{{$.common.secrets}}'
  delegates: '{{$.delegate.delegates}}'
  templates: '{{$.templates}}'
  fileStore: File Store
stepType: 'Step Type'
scriptType: 'Script Type'
shellScriptStep: 'Shell Script'
executeScript: 'Where would you like to execute the script?'
targetHost: 'Target Host'
workingDirectory: 'Working Directory'
exportScript: 'You can export script outputs as variables which can be used later in the pipeline.'
sshConnector: 'SSH Connection Attribute'
addOutputVar: 'Add Output Variable'
addInputVar: 'Add Input Variable'
inputValue: Input Value
inputName: Input Name
outputValue: Output Value
outputName: Output Name
notificationMethod: Notification Method
stepGroupInAnotherStepGroup: Step Group can not be put under another Step Group
overrideSet:
  placeholder: Select override sets
  searchInputSet: '{{$.search}}'
  noRecord: No override sets available
  selectMultipleInputSets: select multiple override sets
  helpTextForMultiSelect: Selected overrides will be applied in the order listed. Drag to reorder the override sets.
  inputSet: Override Set
  order: '{{$.order}}'
pipelines-studio:
  addStep: Add step
  dependenciesGroupTitle: Dependencies
  addDependency: Add service dependency (optional)
  pipelineUpdated: Pipeline Updated
  publishPipeline: 'Pipeline published successfully'
  errorWhileSaving: Error occurred saving pipeline
  pipelineUpdatedError: Pipeline is updated in the backend by someone so do you want to take the latest pipeline, this may you loose the local pipeline saved?
inputTypes:
  FIXED: Fixed value
  RUNTIME: Runtime input
  EXPRESSION: Expression
roleForm:
  createSuccess: Role created successfully
  updateSuccess: Role updated successfully
roleDetails:
  permissionUpdatedSuccess: Permissions updated successfully
  updateRolePermissions: Update Role permissions
  noDataText: You have no Roles. Click the button below to create a new one.
roleCard:
  confirmDelete: Are you sure you want to delete the Role '{{name}}'?
  confirmDeleteTitle: 'Delete Role'
  successMessage: Role '{{name}}' is deleted successfully
addResourceModal:
  selectedText: Selected {{name}} ({{number}})
projectCard:
  clone: 'Clone'
  projectName: 'Project Name'
  confirmDelete: Deleting the Project '{{name}}' would mean that you are also deleting all the resources associated with it. Are you sure you want to delete the Project?
  confirmDeleteTitle: 'Delete Project'
  successMessage: 'Project {{projectName}} is deleted'
  cdRendererText: 'Deployments in last 7 days'
  cvRendererText: 'Verifications in last 7 days'
  ciRendererText: 'Builds in last 7 days'
  cfRendererText: 'Feature Flags in last 7 days'
  ceRendererText: 'Cost Savings in last 7 days'

ssh:
  sshCredential: 'SSH Credential'
  createmessageSuccess: 'Execution Credential created successfully'
  editmessageSuccess: 'Execution Credential updated successfully'
secretManager:
  createmessageSuccess: 'Secrets Manager created successfully'
  editmessageSuccess: 'Secrets Manager updated successfully'
secret:
  titleCreateText: 'Add new Encrypted Text'
  titleCreateFile: 'Add new Encrypted File'
  titleEditText: 'Edit Encrypted Text'
  titleEditFile: 'Edit Encrypted File'
  inlineSecret: 'Inline Secret Value'
  referenceSecret: 'Reference Secret'
  secretCreated: Secret Created
  secretActivity: Secret Activity
  labelSecretFile: 'Select File'
  labelSecretReference: 'Reference Secret Identifier'
  saving: 'Saving'
  messageSelectSM: 'Please select a Secret Manager'
  placeholderSecretValue: 'Add your secret value'
  placeholderSecretReference: 'Add the Identifier of the secret to reference'
  validationName: '{{ $.common.validation.nameIsRequired }}'
  validationNameChars: 'Name can only contain alphanumerics, _ and $'
  validationValue: '{{ $.common.validation.valueIsRequired }}'
  validationKms: 'Secret Manager is required'
  validationIdentifier: 'ID is required'
  labelText: 'Text'
  labelFile: 'File'
  labelSecretType: 'Secret type'
  noSecretsFound: 'No Secrets Found'
  configureSecret: 'Configure Secret'
  updateSuccess: 'Secret updated successfully'
instanceFieldOptions:
  percentage: 'percentage'
  instances: 'instances'
  percentageText: '% Percentage'
  instanceText: 'Instance Count'
  percentagePlaceHolder: 'Percentage'
  instanceHolder: 'Count'
connected: Connected
delegate:
  numberOfDelegates: 'Number of delegates'
  delegateSizeUndefined: 'Delegate Size is undefined'
  hostName: 'Hostname'
  useExistingSelectors: 'Use existing delegate selectors'
  verifyDelegateYamlCmnd: '$ kubectl apply -f harness-delegate.yaml'
  delegateNameRequired: 'Delegate Name is Required.'
  delegateSizeRequired: 'Delegate Size is Required.'
  delegateConfigRequired: 'Delegate Configuration is Required.'
  configNameRequired: 'Delegate Configuration name is Required.'
  successfullyUpdatedConfig: 'Successfully Updated Delegate Configuration'
  totalMem: 'Total Mem'
  totalCpu: 'Total CPU'
  productionWorkloads: 'For Production Workloads'
  delegateName: 'Delegate Name'
  delegateType: 'Delegate Type'
  delegateSize: 'Delegate Size'
  delegateSizeLower: 'Delegate size'
  delegateSizeLarge: 'Large'
  delegateMEM: MEM
  delegateCPU: CPU
  delegateDISK: DISK
  delegateSizeUpto: Runs upto concurrent tasks
  delegatesConfigurations: Delegates Configurations
  envTypes: Environment types
  initScriptPlaceholder: Enter initialization script...
  enterTags: Enter tags...
  selectEnvType: Select environment types...
  selectEnvs: Select environments...
  pendingApproval: Pending Approval
  notConnected: Not Connected
  newConfiguration: New Delegate Configuration
  delegates: 'Delegates'
  NEW_DELEGATE: 'New Delegate'
  DelegateName: 'Delegate'
  DelegateSelector: 'Delegate Selector'
  DelegateselectionLabel: 'Setup Delegates'
  DelegateselectionConnectorText: 'Limit usage of this connector to the delegates which have the following tags'
  DelegateselectionPlaceholder: 'Select or create the delegate selectors'
  DelegateSelectorErrorMessage: 'Delegate Selector has an invalid expression, it does not include'
  DelegateSelectorErrMsgSplChars: 'has invalid characters, the selector property cannot contain'
  Delegate_Selector_placeholder: 'Add specific selectors or leave empty to target any delegate'
  delegateTags: 'Delegate Tags'
  ReturnToDelegates: 'Return to list of Delegates'
  tagsFromDelegateConfig: 'Tags inherited from the delegate configuration'
  delegateSpecificTags: 'Delegate Specific Tags'
  delegateTagDescription:
    'You can use delegate tags to control if this delegate can be used for executing certain steps in
    a pipeline'
  LastHeartBeat: 'Last HeartBeat'
  delegates_4_ways_title: 'Delegates are worker processes that runs on your infrastructure to execute tasks on behalf of the Harness platform. You can run these Delegates in one of 4 ways:'
  kubernetes:
    prerequisites: 'Kubernetes Prerequisites'
    prerequisites_info1: 'You have access to your Kubernetes cluster and install Harness Delegates as YAML or Helm Chart'
    prerequisites_info2: 'If you are using Harness SaaS, your machine must be able to connect to Harness SaaS URL: '
    prerequisites_info3: 'Your Kubernetes cluster has unallocated resources required to run the Harness Delegate workload'
    prerequisites_worload: '{{label}} - {{ram}}GB memory, {{cpu}}CPU'
    permissions_title: 'You will need the following Kubernetes permissions to install the delegate:'
    permissions_info1: 'Permission to create namespace (For the Harness Delegate namespace)'
    permissions_info2: 'Permission to create statefulsets (For the Harness Delegate Pod to be created)'
    url: 'https:app.harness.io:443/'
  stepOneWizard: 'Create Delegate'
  reviewScript:
    configProxySettings: 'Configure Proxy Settings'
    descriptionProxySettings: 'If the connection to Harness will happen through a proxy, configure the proxy settings PROXY_HOST, PROXY_USER and PROXY_PASSWORD in launch-harness-delegate.sh '
  successVerification:
    applyYAMLTitle: ' Apply YAML and verify connection'
    description1: 'Copy the downloaded YAML to a machine where you have kubectl installed and have access to your Kubernetes cluster.'
    description2: 'Run the following command to apply the Harness delegate to your Kubernetes Cluster'
    checkDelegateInstalled: Checking if the delegate is installed. It might take several minutes for the installation.
    heartbeatReceived: Heartbeat received
    delegateInitialized: Delegate initialized
    delegateInstalled: Delegate Installed Successfully
  delegateNotInstalled:
    title: Delegate not installed
    verifyField2: kubectl logs -f <harness-delegate> -n harness-delegate
    verifyField3: kubectl describe pod_name -n harness-delegate
    statusOfCluster: 'Check the status of your delegate on your cluster'
    podCommand: 'kubectl describe pod <your-delegate-pod> -n harness-delegate'
    podComeUp: 'Did the pod <pod name> come up?'
    eventErrorBlock: 'Do you see the error in the events block? If so what is the error?'
    permissionError: 'Permission Error'
    crashloopError: 'Crashloop BackOff'
    pullError: 'ErrorImage Pull'
    harnessErrorValidation: 'Do you see an error "Failed to connect to Harness SaaS? or Manager?"'
    contactHarness: 'Contact Harness Support'
    tabs:
      commonProblems:
        title: Common Problems
        hereIsWhatYouCanDo: Here is what you can do
        troubleshoot: Troubleshoot
        checkTheDelegateLogs: Check the Delegate Logs
        description1:
          If the pod is not up, in your cluster you see the delegate pod in a CrashLoopBackOff:Kubernetes CLuster
          Resources are not available. Check the Kubernetes Cluster Resources (CPU, Memory)
        description2: If the Delegate didn’t reach a healthy state
        checkEndPoint: Check the Health Check Endpoint in the Delegate. Search YAML for healthCheckEndpoint
      troubleshooting: Troubleshooting
  cardData:
    docker:
      text: 'Runs Harness Delegate as a Docker container on any Linux or Mac.'
      value: 'serviceDockerhub'
      icon: 'service-dockerhub'
      name: 'Docker'
    kubernetes:
      text: 'Runs Harness Delegate as a workload on your Kubernetes Cluster.'
      value: 'serviceKubernetes'
      icon: 'service-kubernetes'
    amazonECS:
      text: 'Runs Harness Delegate as an Amazon process.'
      value: 'serviceLinux'
      icon: 'service-linux'
      name: 'Amazon ECS'
    linux:
      text: 'Runs Harness Delegate as a Linux process.'
      value: 'ecs'
      icon: 'service-ecs'
      name: 'Linux'
  delegateConfigurations: 'Delegate Configurations'
  delegateConfiguration: 'Delegate Configuration'
  CONFIGURATION_NAME: 'Delegate Configuration Name'
  Scope: 'Scope'
  ScopeDescription: 'Limit the delegate to perform tasks related to the following environments'
  Init_Script: 'Initialization Script'
  instancesCount: '({{count}} of {{total}} instances)'
  deleteDelegate: 'Delete Delegate'
  questionDeleteDelegate: 'Are you sure you want to delete this Delegate?'
  deleteDelegateConfiguration: 'Delete Delegate Configuration'
  deleteDelegateConfigurationQuestion: 'Are you sure you want to delete the configuration '
  deleteDelegateConfigurationSuccess: 'Delegate Configuration {{ profileName }} deleted'
execution:
  pipelineIdentifierTextCI: '(Build ID: {{runSequence}})' # Text for Pipeline Identifier
  pipelineIdentifierTextCD: '(Execution ID: {{runSequence}})' # Text for Pipeline Identifier
  latestCommit: 'Latest commit:'
  latest5Commits: 'Commits (up to 5):'
  prSymbol: '#'
  triggerType: # text for trigger types
    MANUAL: Manually
    WEBHOOK: Webhook
  stepLogs: Step Logs
  consoleLogs: Console Logs
  iotab:
    noInputText: No input found for current step
    noOutputText: No output found for current step
  approvals:
    timeRemainingSuffix: remaining till timeout
    inputsTitle: Approval inputs
    statusMsg: '{{ count }} of {{ total }} approvals complete'
    criteriaMsg: Approval/Rejection Criteria Listed Below
    jiraTicket: 'JIRA Ticket Pending Approval:'
    allConditionsMsg: 'If all conditions are met for the following:'
    anyConditionsMsg: 'If any condition is met for the following:'
    conditions:
      equals: 'If {{ key }} equals'
      not_equals: 'If {{ key }} does not equals'
      in: 'If {{ key }} is in'
      not_in: 'If {{ key }} is not in'
pre-flight-check:
  preFlightCheckTitle: 'Pre-flight check'
  errorFoundCounter: '{{errorCount}} error found'
  possibleCauses: 'Possible causes:'
  resolution: 'Resolution:'
  gettingConnectorResult: 'Getting connector results'
  couldNotVerifyConnectors: 'Could not verify connectors'
  connectorLocationInPipeline: 'Connector location in the pipeline'
  stepColon: 'Step:'
  stageColon: 'Stage:'
  couldNotVerifyInputSets: Could not verify input sets
  gettingResults: Getting results
  continueToRunPipeline: Ignore the errors and continue to run pipeline
  skipCheckBtn: Skip pre-flight check
  skipCheckInfo: You can skip pre-flight check and continue to run your pipeline
  verifyingPipelineInputs: Verifying pipeline inputs
  verifyingConnectors: Verifying connectors
titleOptional: '(OPTIONAL)'
executionList:
  servicesDeployedText: 'Services Deployed ({{size}})'
moduleRenderer:
  start: No modules-specific data
  newPipeLine: Create New Pipeline
  viewPipelines: View Pipelines
  setupChanges: Set Up Change Sources
  monitoringSources: Set Up Monitoring Sources

settingsLabel: 'Settings'
pipelineSteps:
  duplicateStep: Duplicate Step
  kubernetesInfraStep:
    stepName: Specify your Kubernetes Connector
    kubernetesConnector: Kubernetes Connector
  environmentTab:
    specifyYourEnvironment: Specify Environment
    selectEnvironment: '- Select Environment -'
    newEnvironment: + New Environment
    environmentIsRequired: Environment is a required field
  serviceTab:
    specifyYourService: Specify Service
    selectService: '- Select Service -'
    newService: + New Service
    serviceIsRequired: Service is a required field
    aboutYourService: About the Service
    artifactList:
      addSidecar: + Add Sidecar
      addPrimary: + Add Primary Artifact
    manifestList:
      manifestFormat: MANIFEST FORMAT
      manifestType: MANIFEST TYPE
      manifestStore: STORE
      addManifest: + Add Manifest/Config File
  destroy: 'Destroy'
  configTypes:
    fromPlan: 'Inherit From Plan'
    fromApply: 'Inherit From Apply'
  content: 'Content'
  InheritFromPlan: 'InheritFromPlan'
  InheritFromApply: 'InheritFromApply'
  commitIdValue: 'Commit'
  configFiles: 'Config Files'
  backendConfig: 'Backend Config'
  storeType: 'Store Type'
  configurationTypeRequired: 'Configuration Type is required.'
  configurationType: 'Configuration Type'
  remoteFile: 'Remote File'
  commandRequired: 'Command is required.'
  paths: 'Paths'
  deleteNamespace: 'Delete namespace'
  workspace: Workspace
  repoName: 'Repo Name'
  stepNameLabel: '{{ $.name }}'
  storeTypeRequired: 'Store Type is required.'
  addTerraformVarFile: 'Add Terraform Var File'
  connectorLabel: 'Container Registry'
  connectorInfo: 'Container Registry to use to download the image use to run commands on'
  dependencyConnectorInfo: Container Registry to use to pull the service dependency image from
  gcrConnectorInfo: GCP connector to use for uploading the image to GCR
  ecrConnectorInfo: AWS connector to use for uploading the image to ECR
  s3ConnectorInfo: AWS connector to use for uploading the artifact(s) to S3
  gcsConnectorInfo: GCP connector to use for uploading the artifact(s) to GCS
  hostLabel: Host
  hostPlaceholder: us.gcr.io
  hostInfo: GCR Host
  projectIDLabel: Project ID
  projectIDInfo: GCR Project ID
  cacheFromLabel: 'Cache From'
  autoTagLabel: 'Auto-Tag'
  autoTagSuffixLabel: 'Auto-Tag Suffix'
  settingsInfo: Plugin specific settings. Please refer to the plugin's documentation page
  dockerRegistryInfo: Docker registry. For example, "plugins/s3"
  dockerfileLabel: 'Dockerfile'
  dockerfileInfo: If not provided assumed to be in the root folder of the codebase
  endpointLabel: 'Endpoint URL'
  endpointPlaceholder: http://minio.company.com
  endpointInfo: Endpoint for S3 compatible providers (not needed for AWS).
  contextLabel: 'Context'
  contextInfo: Context represents a directory containing a Dockerfile which kaniko will use to build your image. For example, a COPY command in your Dockerfile should refer to a file in the build context.
  labelsLabel: 'Labels'
  labelsInfo: Use Labels to add metadata to the Docker image
  regionPlaceholder: us-east-1
  regionInfo: AWS Region
  accountLabel: Account ID
  accountInfo: AWS Account ID
  reportPathsLabel: Report Paths
  reportPathsInfo: Each path should lead to file(s) that stores results in the JUnit XML format.  Regex is supported.
  reportPathsPlaceholder: '**/*.xml'
  buildArgsLabel: 'Build Arguments'
  buildArgsInfo: Build-time variables
  bucketLabel: 'Bucket'
  bucketInfo: AWS Bucket
  S3BucketInfo: S3 Bucket
  GCSBucketInfo: GCS Bucket
  targetLabel: 'Target'
  artifactsTargetPlaceholder: path/in/bucket
  targetInfo: Build the specified stage as defined inside the Dockerfile
  artifactsTargetInfo: The path to store the cache in, relatively to the bucket. If not provided the cache will be save to [bucket]/
  jFrogArtifactoryTargetInfo: Repository name relative to the server URL in the connector. If pom.xml is not present then target should be full path to artifacts folder (groupID/artifactID/version)
  outputVariablesLabel: 'Output Variables'
  outputVariablesInfo: 'Output Variables can be used to expose Environment Variables to be used by other steps/stages of the pipeline'
  sourcePathLabel: 'Source Path'
  sourcePathInfo: Use regex to upload multiple files
  optionalConfiguration: 'OPTIONAL CONFIGURATIONS'
  pullLabel: 'Image Pull Policy'
  pullInfo: |
    Determine the pull policy of the Docker image:
    The default behavior is downloading an image if it doesn’t exist in the local cache, unless the “latest” tag is used either explicitly or implicitly.
    “If not exists” - only pull the image if not found in the local cache.
    “always” - always pull the newest version of the image.
    “never” - always use image from local cache, if available.
  pullIfNotExistsLabel: 'If not exists'
  pullNeverLabel: 'Never'
  pullAlwaysLabel: 'Always'
  sourcePathsLabel: 'Source Paths'
  sourcePathsInfo: 'A list of files. Expressions are supported. For example: target/*.jar'
  cacheSourcePathsInfo: A list of files/folders to cache
  pomFileLabel: 'POM File'
  pomFileInfo: Path to the pom.xml file
  setContainerResources: 'Set container Resources'
  setContainerResourcesTooltip: |
    Resources limits allow setting maximum values for the resources the container is allowed to use at runtime.
    Use “Limit Memory” to limit the memory that the container can use. Limits for memory are measured in bytes. You can express memory as a plain integer or as a fixed-point number using one of these suffixes: G, M. You can also use the power-of-two equivalents: Gi, Mi.
    Use “Limit CPU” to limit the number of cores that the container can use. Limits for CPU resources are measured in cpu units. Fractional requests are allowed. The expression 0.1 is equivalent to the expression 100m, which can be read as "one hundred millicpu"
  limitMemoryLabel: 'Limit Memory'
  limitMemoryPlaceholder: '128Mi'
  limitCPULabel: 'Limit CPU'
  limitCPUPlaceholder: '0.2'
  limitMemoryUnitMiLabel: Mi
  limitMemoryUnitGiLabel: 'Gi'
  limitMemoryExample: 'Ex: 512 MiB, 1 GiB'
  limitCPUExample: 'Ex: 1'
  timeoutLabel: 'Timeout'
  provisionerIdentifier: 'Provisioner Identifier'
  timeoutPlaceholder: '120s'
  resourceNameLabel: 'Resource Name'
  resourceNameValue: 'ResourceName'
  releaseNameLabel: 'Release Name'
  releaseNameValue: 'ReleaseName'
  manifestPathLabel: 'Manifest Path'
  manifestPathValue: 'ManifestPath'
  deleteResourcesBy: 'Delete resources by'
  deleteResourcesPlaceHolder: 'Specify resources to be delete'
  manifestPathsPlaceHolder: 'Specify file paths'
  deleteNamespaceWarning: 'Warning: Ensure that you are not deleting a namespace that is used by other deployments'
  timeoutInfo: |
    You can use:
    w for weeks
    d for days
    h for hours
    m for minutes
    s for seconds
    ms for milliseconds
  instanceLabel: 'Instances'
  typeName: 'instanceType'
  awsConnectorLabel: AWS Connector
  awsConnectorInfo: AWS connector to use for saving the cache to S3
  restoreCacheAwsConnectorInfo: AWS connector to use for restoring the cache from S3
  gcpConnectorLabel: GCP Connector
  gcpConnectorInfo: GCP connector to use for saving the cache to GCS
  restoreCacheGcpConnectorInfo: GCP connector to use for restoring the cache from GCS
  dockerHubConnectorLabel: Docker Connector
  dockerHubConnectorInfo: Docker Connector to use for uploading the image
  k8sRolloutDeploy: K8s Rollout Deploy
  k8sApply: K8s Apply
  k8sDelete: K8s Delete
  k8sRolloutRollback: K8s Rolling Rollback
  barrier: Barrier
  k8sBGDeploy: 'K8s Blue Green Deploy'
  k8sCanaryDeploy: 'K8s Canary Deploy'
  k8sBGSwapServices: 'K8s Blue Green Swap Services'
  K8sCanaryDelete: 'K8s Canary Delete'
  k8sScale: 'K8s Scale'
  skipDryRun: 'Skip Dry Run'
  deploymentTypes:
    kubernetes: '{{$.kubernetesText}}'
    gk8engine: Google Kubernetes Engine
  skipSteadyStateCheck: Skip Steady State Check
  workload: 'Workload'
  stepNameRequired: 'Step Name is required'
  provisionerIdentifierRequired: 'Provisioner Identifier is required.'
  lessThanZero: 'Instance cannot be less than zero.'
  morethanHundred: 'Instance cannot be more than 100.'
  instancesRequired: 'Instance is required.'
  methodIsRequired: Method is required
  keyInfo: The key the cache will be identified by. You can use the checksum macro to create a key that is based on a file’s checksum. For example, myApp-{ { checksum filePath1 } }
  restoreCacheKeyInfo: The key that can be used to restore this cache. You can use the checksum macro to create a key that is based on a file’s checksum. For example, myApp-{ { checksum filePath1 } }
  build:
    delete:
      confirmDeleteTitle: 'Are you sure you want to remove this stage '
      deleteStageText: 'You are removing a stage that is dependency for other stages. Removing this stage will clear configuration for following stages:'
    create:
      aboutYourStage: 'About Your Stage'
      stageNameRequiredError: 'Stage Name is required'
      cloneCodebaseHelperText: 'Unless disabled, Harness automatically clones your codebase repository before executing the steps of this stage'
      stageNameRegExpError: 'Stage Name can only contain alphanumerics, _ and $'
      stageDescriptionRegExpError: 'Stage Description can only contain alphanumerics, _ and $'
      configureCodebase: 'Configure Codebase'
      configureCodebaseHelperText: 'Help text to tell the user this is only for the first time.'
      connectorRequiredError: 'Connector is required'
      repositoryNameLabel: 'Repository Name'
      repositoryUrlWrongUrlError: 'Please enter valid URL'
      repositoryUrlRequiredError: 'Repository URL is required'
      setupStage: 'Set Up Stage'
      buildStageName: Build / Test

    stageSpecifications:
      stageNamePlaceholder: 'Enter your stage name'
      variableNamePlaceholder: 'Enter Variable name'
      sharedPaths: 'Shared Paths'
      sharedPathsInfo: By default, all of a stage’s steps use the same workspace to share data. If you need to share additional paths between steps, add Shared Paths
      addSharedPath: '+ Path'
      addDescription: 'description'
      addTags: 'tags'
      variablesCell: 'VARIABLES'
      valueCell: 'VALUE'
    infraSpecifications:
      whereToRun: Where do you want the builds to run?
      propagate: 'Propagate from an existing stage'
      newConfiguration: 'New Configuration'
      newConfigurationConnectorLabel: 'Select a Kubernetes Cluster'
      namespace: '{{$.common.namespace}}'
  deploy:
    errors:
      notags: No tags found with given Image Path
    create:
      multipleServices: '{{$.multipleService}}'
      deployStageName: Deploy
      deployStageDescription: Use this stage to deploy services, functions or execute workloads
    inputSet:
      imagePath: 'Image Path'
      artifactServer: 'Artifact Server'
      branch: 'Branch'
    serviceSpecifications:
      serviceDefinition: Service Definition
      useFromStageLabel: 'Use from Stage'
      propagate: 'Propagate from:'
      deploymentTypes:
        artifacts: '{{ $.artifacts }}'
        manifests: '{{ $.manifests }}'
    infrastructure:
      infraDefinition: Infrastructure definition
      selectMethod: Select the best method for Harness to reach your Kubernetes Cluster.
      directConnection: Direct Connection
      viaCloudProvider: Via Cloud Provider
    provisioner:
      enableProvisionerLabel: Provision your infrastructure dynamically during the execution of your pipeline
  feature:
    create:
      featureStageName: Feature Flag
      featureStageDescription: Use this stage to roll out features or run a workflow.
      specifyEnvironment: Specify the environment
      whatIsFor: What is your flag used for?

validation:
  thisIsARequiredField: This is a required field
  nameRequired: Name is a required field
  connectorName: Connector name is a required field
  stepNameRequired: Step Name is a required field
  identifierRequired: Identifier is a required field
  identifierDuplicate: Stage with same identifier already exists
  connectorRefRequired: Container Registry is a required field
  AWSConnectorRefRequired: AWS connector is a required field
  GCPConnectorRefRequired: GCP connector is a required field
  dockerHubConnectorRefRequired: Docker Connector is a required field
  imageRequired: Image is a required field
  commandRequired: Command is a required field
  limitCPUMinNumberZero: Limit CPU must be greater than or equal to 0
  keyRequired: Key is a required field
  valueRequired: Value is a required field
  repositoryName: 'Repository Name is required'
  branchName: 'Branch Name is required'
  commitId: 'Commit Id is required'
  validIdRegex: Identifier must start with an alphabet or _ and can then be followed by alphanumerics, _ or $
  # Replace if validIdRegex will apply the same rules
  validStepIdRegex: Identifier can only contain alphanumerics and _
  validKeyRegex: Keys can only contain alphanumerics and _
  validOutputVariableRegex: Output variables can only contain alphanumerics and _
  validReportPathRegex: Report paths should end with .xml
  validStepNameRegex: Step Name can only contain alphanumerics, spaces, _ and -
  illegalIdentifier: 'Identifier must not be one of the following values: or, and, eq, ne, lt, gt, le, ge, div, mod, not, null, true, false, new, var, return'
  uniqueStepAndServiceDependenciesId: Identifier should be unique across the steps and service dependencies
  uniqueKeys: Keys should be unique
  uniqueValues: Values should be unique
  matchPattern: Invalid value, please look for info above to read more
  duplicateIdError: 'Failed to create connector: {{ connectorName }}. There is already a connector with identifier {{ connectorIdentifier }} present or soft deleted. Please provide a new unique identifier and save again.'
  username: 'Username is a required field'
  password: 'Password is a required field'
  accountName: Account Name is a required field
  authType: 'Auth type is required'
  masterUrl: 'Master URL is required'
  orgValidation: Organization is required
  serviceAccountToken: 'Service Account Token is required'
  OIDCIssuerUrl: 'OIDC Issuer URL is required'
  OIDCUsername: 'OIDC username is required'
  OIDCPassword: 'OIDC Password is required'
  OIDCClientId: 'OIDC Client ID is required'
  OIDCSecret: 'OIDC Secret is required'
  clientKey: 'Client Key is required'
  clientKeyPassphrase: 'Client Key passphrase is required'
  clientCertificate: 'Client Certificate is required'
  encryptedKey: 'Encrypted Key is required'
  installationId: 'GitHub Installation ID is required'
  applicationId: 'GitHub Application ID is required'
  UrlRequired: URL is required
  vaultUrl: Vault URL is required
  secretId: Secret ID is required
  secretEngineName: Secret Engine Name is required
  secretEngine: Secret Engine is required
  engineVersionNumber: Secret Engine Version can only be a positive number
  engineVersion: Secret Engine Version is required
  renewalNumber: 'Renewal interval can only be a positive number'
  renewalInterval: 'Renewal interval is required'
  authToken: 'Auth Token is required'
  appRole: 'App Role ID is required'
  sshKey: SSH key is required
  kerberosKey: Kerberos key is required
  privateKey: 'GitHub Private Key is required'
  accessToken: Access token is required
  dockerRegistryUrl: 'Docker Registry URL is required'
  helmRepoUrl: 'Helm Repo URL is required.'
  jiraUrl: 'Jira Url is required.'
  registryHostname: 'GCR Registry URL is required'
  nexusServerURL: 'Nexus URL is required'
  nexusVersion: 'Version is required'
  artifactoryServerURL: 'Artifactory URL is required'
  timeout10SecMinimum: 'Min Timeout is 10 Seconds'
  tagsRequired: Tags is a required field
  environmentVariablesRequired: Environment Variables is a required field
  settingsRequired: Settings is a required field
  labelsRequired: Labels is a required field
  buildArgsRequired: Build Arguments is a required field
  imageNameRequired: Image Name is a required field
  regionRequired: Region is a required field
  dockerRegistryRequired: Docker Registry is a required field
  accountRequired: Account ID is a required field
  repoRequired: Repository is a required field
  bucketRequired: Bucket is a required field
  sourcePathRequired: Source Path is a required field
  targetRequired: Target is a required field
  sourcePathsRequired: Source Paths is a required field
  hostRequired: Host is a required field
  projectIDRequired: Project ID is a required field
  scriptTypeRequired: Script Type is required field
  targethostRequired: 'Target host is required field'
  workingDirRequired: 'Working Directory is required field'
  sshConnectorRequired: 'Connector is required field'
  gitServerRequired: 'Git server is a required field'
  urlIsNotValid: 'URL is not valid'
  notificationNameDuplicate: Notification with same name already exists
  artifactServerRequired: Artifact Server is a required field
  minLengthRequired: Minimum Length is a required field

yamlBuilder:
  enableEditContext: Editor is currently in read-only mode. Do you want to enable edit mode?
  lineNumberLabel: On line number
  yamlError: Invalid or malformed yaml. Please fix the yaml and try again.
  snippets:
    noSnippetsFound: No snippets found.
activityHistory:
  successfulActivity: Successful Activity
  failedActivity: Failed Activity
  heartbeatFailure: Heart beat Failure
  connectivityCheck: Connectivity Check
  connectivityCheckFailed: Connectivity Check Failed
  createdSuccessfully: Created Successfully
  updatedSuccessfully: Updated Successfully
  noData: No Activity Found
none: 'None'
configureOptions:
  configureOptions: 'configure options'
  defaultValue: 'Default value'
  requiredDuringExecution: 'Required during execution'
  validation: 'Validation'
  regex: 'Regex'
  returnToBasic: 'return to basic'
  jexlLabel: 'Values ({{ $.common.jexlExpression }})'
  values: 'Values'
  enterTags: 'Enter values'
  validationErrors:
    regExIsRequired: 'Regex value is required'
    regExNotValid: 'Regex value is not valid'
    jexlExpressionRequired: '{{ $.common.jexlExpression }} is required'
    minOneAllowedValue: 'Minimum one allowed value'
  notValidExpression: 'Not a valid input Expression'
  advancedHelp: 'With the advanced option, <br> you can type in JEXL expressions to return a list of values. <br> <a target="_blank">More information</a> <br> E.g. ${env.type} == “prod” ? aws1, aws2 : aws3, aws4'

pipeline-list:
  aboutPipeline: Pipelines define your release process using multiple Workflows and approvals in sequential and/or parallel stages.
  listStages: '{{ $.stages }}'
  createPipeline: '+ Create Pipeline'
  confirmDeleteTitle: Delete Pipeline
  pipelineDeleted: Pipeline {{name}} deleted
  confirmDelete: Are you sure want to delete pipeline {{name}}
  readyToRun: Ready To Run
variables:
  copyVariableName: copy variable name
  copyFqn: copy fully qualified name
customVariables:
  pipelineVariablesTitle: Pipeline Variables
  pipelineVariablesDescription: Every aspect of the pipeline configuration is represented in pipeline variables and its corresponding values. These variables can be referenced within stages and step. Custom variables may be added whose values are prompted for during the execution of this pipeline
  title: Custom Variables
  variableAndType: '{{name}} [Type: {{type}}]'

approvalStage:
  title: Approval
  description: Use this stage to approve or reject the progression of your deployments.
  approvalTypeHeading: What type of approval would you like to add?
  stageNameRequired: Stage name is mandatory
  setupShellOverview: Approval Stage Overview
  setupShellExecution: Approval Execution
  # Custom Dashboards
resourceGroup:
  newResourceGroup: 'New Resource Group'
  updateResourceGroupDialogTitle: 'Update Resource Group'
  color: '{{ $.color}}'
  dragAndDropData: Please select or drag and drop the type of resources, you would like to add to your group.
  resourceGroupColumn: 'Resource Group'
  summary: '{{ $.summary }}'
  createSuccess: 'Resource Group created successfully'
  updateSuccess: 'Resource Group updated successfully'
  confirmDelete: 'Are you sure you want to delete {{name}} Resource Group'
  confirmDeleteTitle: 'Delete Resource Group'
  deletedMessage: 'Resource Group {{name}} deleted'
  limitAccess: 'To limit access to specific set of {{name}} add to this list'
  selectResourceGroup: 'Select Resource Group'
  add: '+ Add {{name}}'
  all: 'All {{name}}'
  noResourceGroupTypes: 'No Resource Group types available'
  builtInResourceGroup: 'Built in resource-group'
  noResourceGroup: 'No Resource Group available'
  noResourceGroupFound: 'No Resource Group Found'
configuration: Configuration
entityReference:
  noRecordFound: 'No Record Found'
  apply: 'Apply Selected'

characters: 'characters'
uppercase: 'uppercase'
lowercase: 'lowercase'
specialChar: 'special character'
adminResources: 'Admin:Resources'
personalAccessToken: 'Personal Access Token'
