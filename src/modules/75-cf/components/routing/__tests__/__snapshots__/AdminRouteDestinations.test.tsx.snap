// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdminRouteDestinations it should return the admin routes 1`] = `
<React.Fragment>
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    path={
      Array [
        "/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/access-control",
      ]
    }
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <RedirectToAccessControlHome />
  </RouteWithLayout>
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    path={
      Array [
        "/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/access-control/users",
      ]
    }
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <AccessControlPage>
      <UsersPage />
    </AccessControlPage>
  </RouteWithLayout>
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    path={
      Array [
        "/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/access-control/user-groups",
      ]
    }
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <AccessControlPage>
      <UserGroupsPage />
    </AccessControlPage>
  </RouteWithLayout>
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    path={
      Array [
        "/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/access-control/resource-groups",
      ]
    }
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <AccessControlPage>
      <ResourceGroups />
    </AccessControlPage>
  </RouteWithLayout>
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    path={
      Array [
        "/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/access-control/roles",
      ]
    }
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <AccessControlPage>
      <Roles />
    </AccessControlPage>
  </RouteWithLayout>
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    path={
      Array [
        "/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/access-control/roles/:roleIdentifier",
      ]
    }
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <RoleDetails />
  </RouteWithLayout>
  <RouteWithLayout
    exact={true}
    layout={[Function]}
    licenseRedirectData={
      Object {
        "expiredTrialRedirect": [Function],
        "licenseStateName": "FF_LICENSE_STATE",
        "startTrialRedirect": [Function],
      }
    }
    path={
      Array [
        "/account/:accountId/:module/orgs/:orgIdentifier/projects/:projectIdentifier/setup/access-control/resource-groups/:resourceGroupIdentifier",
      ]
    }
    sidebarProps={
      Object {
        "icon": "cf-main",
        "navComponent": [Function],
        "title": "Feature Flags",
      }
    }
  >
    <ResourceGroupDetails />
  </RouteWithLayout>
</React.Fragment>
`;
