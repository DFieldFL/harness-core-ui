continuous: 'Continuous Integration'
learnMore: Learn more about Continuous Integration
ciTrialHomePage:
  startTrial:
    description: '{{ $.ci.dashboard.subHeading }}'
    startBtn:
      description: Start 14 day CI Enterprise trial
dashboard:
  subHeading: Take your software build processes to the next level using our Harness Continuous Integration
  createProject: '{{ $.projectsOrgs.createProject }}'
testsReports:
  executionOverview: Test Execution Overview
  numberOfSelectedTests: '# of Selected Tests'
  testsIntelligentlySkipped: Tests Intelligently Skipped
  timeSaved: Time Saved
  totalExecutedTest: Total Executed Tests
  selectionBreakdown: Testcase Selection Breakdown
  selectionBreakdownInfo: Shows aggregated data on how tests were selected
  totalWithColon: 'TOTAL:'
  failedWithColon: 'FAILED:'
  successWithColon: 'SUCCESS:'
  skippedWithColon: 'SKIPPED:'
  skipped: Skipped
  correlatedWithCodeChanges: Correlated with Code Changes
  newTests: New Tests
  updatedTests: Updated Tests
  coverage: Files Coverage
  coverageInfo: List of files that were added or changed in the build which don't have a proper testing coverage
  onlyUncoveredFiles: Only Uncovered Files
  filename: FILENAME
  commitId: COMMIT ID
  failedTests: Failed Tests
  failureMessage: Failure Message
  stackTrace: Stack Trace
  consoleOutput: Console Output
  testSuite: 'Test Suite:'
  totalTests: Total Tests
  testCaseName: TEST CASE NAME
  className: CLASS NAME
  result: RESULT
  testCasesExecution: Testcases Execution
  testCasesExecutionInfo: Shows a list of executed tests and result. In case of error, hover the test to see additional information
  noFailedTestsFound: No failed tests found
  showOnlyFailedTests: Show only failed tests
  hangTight: Hang tight! Report is being generated...
  nothing: Nothing here!
  notfound: No tests were found to analyze.
  willBeDisplayedIfAvailable: Test reports will be displayed here if they are configured and available.
  learnMore: Learn how to enable Unit test reporting
  resultLabel: Testcase Execution Result
  resultInfo: Heat Map showing a graphical over of the test results
  sortBy: 'Sort by:'
commitsOn: 'Commits on'
committed: 'committed'
clipboardCopySuccess: '{{ $.clipboardCopySuccess }}'
clipboardCopyFail: '{{ $.clipboardCopyFail }}'
infraLabel: '{{ $.infrastructureText }}'
executionLabel: '{{ $.executionText }}'
advancedLabel: '{{ $.advancedTitle }}'
previous: '{{ $.previous }}'
next: '{{ $.next }}'
save: '{{ $.save }}'
titleResources: '{{ $.resourcePage.title }}'
newConnectorButton: '{{ $.newConnector }}'
connectors: '{{ $.connectorsLabel }}'
secrets: '{{ $.common.secrets }}'
delegates: '{{ $.delegate.delegates }}'
templates: '{{ $.templates }}'
fileStore: '{{ $.resourcePage.fileStore }}'
titleSettings: 'GENERAL SETTINGS'
titleGovernance: 'GOVERNANCE'
newItem: '+ new item'
noData: 'No data found. Click the button below to create a new item.'
welcome: 'Welcome to Continuous Integration'
description: 'Build your applications with blazing fast pipelines.'
createPipeline: '{{ $.common.createPipeline }}'
privileged: Privileged
privilegedInfo: Enable privilege mode
annotations: Annotations
labels: '{{ $.pipelineSteps.labelsLabel }}'
optimize: Optimize
optimizeInfo: Enables redo snapshot mode
remoteCacheImage:
  label: Remote Cache Image
  placeholder: myImageName-cache
  ecrInfo: The remote cache repository needs to be created in the same account and region as the build image. The repository must already exist for caching to work
  gcrInfo: The remote cache repository needs to be created in the same host and project as the build image. The repository will be automatically created if it doesnâ€™t exist.
  dockerInfo: The remote cache repository needs to be created in the same account and organization as the build image. The repository must already exist for caching to work
