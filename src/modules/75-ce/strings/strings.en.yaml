continuous: Continuous Efficiency
homepage:
  slogan: 'Take your Cloud Cost management to the next level using our Harness Continuous Efficiency.'
  learnMore: 'Learn more about Continuous Efficiency'
co:
  autoStopping: 'AutoStopping'
  newAutoStoppingRule: 'New AutoStopping Rule'
  landingPageText:
    '<b>AutoStopping Rules</b> dynamically make sure that your <i>non-production workloads</i> are <b>running (and costing you)
    only when you’re using them</b>, and never when they are idle. Additionally, run your workloads on fully
    orchestrated <b>spot instances</b> without any worry of spot interruptions.'
  breadCrumb:
    rules: 'AutoStopping Rules'
  noData: 'No data available. Please check after sometime'
  autoStoppingRule:
    helpText:
      step1:
        title: 'Idle Time'
        description:
          'Set the number of minutes you want AutoStopping to wait before optimizing idle instances. AutoStopping
          will shut down (for on-demand) or snapshot and terminate (for spot) the instances after the idle time
          period has elapsed.'
      step2:
        title: 'Resources managed the the AutoStopping Rule'
        description:
          heading: 'You can add resources in the form of'
          resourceList:
            asg: 'Auto scaling groups'
          info: 'You can search for instances that you have in your AWS account. These instances will be motnitored by the rule to see if they are idle.'
          additionalInfo: 'You can also add Auto Scaling groups which have target groups in them. But you can add only one ASG to a rule.'
      step3:
        title: 'Choose instance fulfilment'
        description:
          heading: 'Your Linux on t3.2xlarge instance in US East (N. Virginia) region costs $240 on-demand and $72 on spot. That’s 70% savings!'
          info: 'With On-Demand Instances, you pay for compute capacity by the second with no long-term commitments. You have full control over its lifecycle—you decide when to launch, stop, hibernate, start, reboot, or terminate it.'
          additionalInfo: 'A Spot Instance is an unused EC2 instance that is available for less than the On-Demand price. Because Spot Instances enable you to request unused EC2 instances at steep discounts, you can lower your Amazon EC2 costs significantly.'
      readMore: 'Read More...'
    providerSelector:
      description: 'Select the cloud account type'
      helpText:
        selectProvider: 'Select the cloud provider account in which the workloads you want AutoStopping to manage are running.'
    configuration:
      asgSelectionInfoText: 'Only ASGs with non-empty target groups will be shown here'
      step1:
        title: 'Define your AutoStopping rule'
        subTitle: 'Provide a friendly name to identify the rule and determine the idle time.'
      step2:
        title: 'Resources to be managed by the AutoStopping rules'
        subTitle: 'You can manage multiple instances or a Auto Scaling group using AutoStopping rule.'
        additionalResourceInfo:
          instance: 'Add an instance to be managed by the AutoStopping Rule. You can choose to add multiple instances to a single Rule.'
          asg: 'Add an ASG to be managed by the AutoStopping Rule. You can choose only one ASG to a single Rule'
        addResourceCta:
          instance: 'Add an instance'
          asg: 'Add a auto-scaling group'
      step3:
        title: 'Choose the instance fulfilment type you would like for the instances chosen'
        subTitle: 'The selected Auto Scaling group has been created using mixed instances as shown below. You can choose to go with the same or convert all of them to spot or on demand.'
        policyNotEnabled: 'Mixed instance policy is not enabled'
      step4:
        title: 'Set up Routing, Health check and Advanced Configuration'
        subTitle: 'Add an instance to be managed by the AutoStopping Rule. You can choose to add multiple instances to a single Rule'
    review:
      configDetails: 'Configuration Details'
    setupAccess:
      pageName: 'Setup Access'
      customDomain:
        helpText: 'Specify the URL used to access the resources(Optional)'
        noHostedZones: 'Custom domain does not match to any of the existing domains'
      autogeneratedHelpText: 'This auto-generated URL to access the resources managed by this AutoStopping Rule.'
      helpText:
        dns:
          info: 'Select DNS Link if the instances managed by this AutoStopping Rule are currently accessed by a URL.'
          setup:
            title: 'To create a DNS Link, you need to:'
            step1:
              title: 'Enter the URL currently used to access the instances'
              description:
                'Domain name should be entered without prefixing the scheme. A rule can have multiple URLs. You can
                enter comma separated values into Custom URL to support multiple URLs.'
            step2:
              title: 'Select and Configure the DNS Provider'
              description:
                ' You will need to map your publicly accessible URL to the host name generated by this Lightwing
                AutoStopping Rule. Select your DNS Provider from the list to proceed with the mapping.'
            step3:
              title: 'Select an Access Point'
              description:
                'Since your URL is not publicly accessible, you will need to create a new Access Point or select
                from an existing one. This will enable the AutoStopping Rule to manage your resources from within
                your private network.'
            mapToDNS:
              title: 'To map your custom domain to hostname, you need to:'
              description:
                ' Navigate to your DNS provider and create a CNAME record that points your Custom domain to the
                default domain(generated by Harness) for your Instances.'
              step1: 'Add a CNAME record with your Custom domain, {{customDomain}} as the host'
              step2: 'Point the record to your Harness domain, {{hostName}}'
              step3: 'Save your settings. It may take a full day for the settings to propagate across the global
                Domain Name System.'
        ssh:
          info: 'A description of how SSH is used to access the Rule securely over an unsecured network.'
          setup:
            title: 'To SSH into instances, you need to:'
            download: 'Download CLI'
            description:
              'Lightwing CLI allows you to access the resources managed by this AutoStopping Rule via SSH and RDP
              while still allowing Lightwing to detect usage and idleness in order to perform the required
              optimization actions as needed.'
        rdp:
          info: 'RDP provides you with a graphical interface to connect to another computer over a network connection.'
        bgTasks:
          info: 'Background tasks description of how it works in accessing gateways'
        ip:
          info: 'IP addresses if the instances managed by this AutoStopping Rule are currently accessed by an IP.'

    save: 'Save Rule'
    confirm:
      disableTitle: 'Disable Rule {{name}}'
      disableDialogText: 'Are you sure you want to disable?'
      enableTitle: 'Enable Rule {{name}}'
      enableDialogText: 'Are you sure you want to enable?'
      disable: '{{ $.common.disable }}'
      deleteServiceTitle: 'Delete Rule {{name}}'
      deleteDialogText: 'Are you sure you want to delete?'

  accessPoint:
    ap: 'Access Point'
    aps: 'Access Points'
    new: 'New Access Point'
    dnsProvider: 'DNS Provider'
    asssociatedRules: 'Associated Rules'
    lastActivity: 'last activity'
    mapDomain: 'Map the domain'
    error: 'Could not create access point'
    success: 'Access Point Created Succesfully'
    create: 'Create Access Point'
    route53: 'Route53'
    others: '{{$.stepPalette.others}}'
    proceed: 'Proceed'
    domainName: 'Access Point Domain name'
    enterDomain: 'Enter {{$.ce.co.accessPoint.domainName}}'
    cloudAccount: 'Cloud Account'
    cloudConnector: 'Cloud Connector'
    createNewALB: 'Create new ALB'
    select:
      accessPoint: 'Select Access Point'
      account: 'Select {{$.ce.co.accessPoint.cloudAccount}}'
      connector: 'Select {{$.ce.co.accessPoint.cloudConnector}}'
      region: 'Select region'
      regionToInstall: '{{$.ce.co.accessPoint.select.region}} to install Access Point'
      existingALB: 'Select from existing ALBs'
      certificate: 'Select Certificate'
      aCertificate: 'Select a certificate'
      vpc: 'Select VPC'
      securityGroups: 'Select security groups'
      dnsProvider: 'Select the {{$.ce.co.accessPoint.dnsProvider}}'
      route53: 'Select Route53 account'
      route53zone: 'Select Route53 hosted zone'
    validation:
      connector: 'Connector is a required field'
      name: 'Access point Name is a required field'
      vpc: 'VPC is a required field'
      subnets: 'Atleast 2 subnets are mandatory'
      securityGroup: 'Atleast one security group is mandatory'
    hostedZone:
      noResult: 'Access point name does not match any of the existing domains'
    delete:
      withResource: 'Delete with all cloud resources'
      success: 'Deleted successfully'
  dnsSetup:
    autoURL: 'Auto generated URL'
    customURL: 'Custom URL (Example: qa.yourcompany.com)'
    isURLaccessible: 'Is the URL publicly accessible?'
  ipAddressSetup:
    'This is just placeholder text. You can customize the domain name for your AutoStopping Rule. Domain name
    should be entered without prefixing the scheme.'
  sshSetup: 'This is just placeholder text. You can customize the domain name for your AutoStopping Rule.
    Domain name should be entered without prefixing the scheme. A Rule can have multiple URLs. You can enter comma
    separated values into Custom domain field to support multiple URLs.'
  gatewayAccess:
    subtitle: 'Now that you have the Rule configured, you need to choose how you would like to access the instances.'
    accessDescription: 'Select how you would like to access the resources managed by this Rule'
    dnsLink: 'DNS Link'
    sshRdp: 'SSH / RDP'
    ip: 'IP Address'
    rdp: 'RDP'
    backgroundTasks: 'Background Tasks'
  instanceSelector:
    name: 'Name and ID'
    ipAddress: '{{$.ce.co.gatewayAccess.ip}}'
    launchTime: 'Launch Time'
  gatewayReview:
    nameYourGateway: 'Name your Rule'
    selectCloudAccount: 'Select Cloud account'
    gatewayDetails: 'Rule Details'
    configurationDetails: 'ConfigurationDetails'
    idleTime: 'Idle time (mins)'
    instanceType: 'Instance Type'
    instance: 'Instance'
    nameAndID: 'NAME AND ID'
    ipAddress: 'IP ADDRESS'
    region: 'REGION'
    type: 'TYPE'
    tags: 'TAGS'
    launchTime: 'LAUNCH TIME'
    routing: 'Routing'
    listenProtocol: 'LISTEN PROTOCOL'
    listenPort: 'LISTEN PORT'
  gatewayBasics:
    connect: 'Connect to your'
    account: 'account'
    select: 'Select your Cloud Account'
    new: 'Link a new'
  gatewayConfig:
    configHeading: 'Rule Configuration'
    info: 'From the list below, select the instances that you want this AutoStopping Rule to manage. Multiple instances can be managed by a single Rule.'
    addInstanceLabel: 'Add Instance'
    addPortLabel: '+ add port'
    addDependency: '+ add dependency'
    customDomain: 'CUSTOM DOMAIN'
    customDomainHelp: 'Custom domains allow you to srve your site from a domain othwer than autogenerated hostname'
    allowTraffic: 'Alllow traffic from all subdomains'
    disable: '{{$.ce.co.autoStoppingRule.confirm.disable}}'
    usePrivateIP: 'Use Private IP'
    healthCheck: 'Health check'
    name: '{{$.ce.co.gatewayReview.nameYourGateway}}'
    addSchedule: '+ add schedule'
    scheduleDescription: 'Set an automated schedule for uptime or downtime of all the resources that match your filter criteria.'
