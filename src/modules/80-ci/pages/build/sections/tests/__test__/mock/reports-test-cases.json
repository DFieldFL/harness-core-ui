{
  "data": {
    "totalPages": 17,
    "totalItems": 340,
    "pageItemCount": 20,
    "pageSize": 20
  },
  "content": [
    {
      "name": "testShouldCollectData_logsMoreThan60MinSinceLastCollectionWithinBuffer",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "failed",
        "message": "\u001b[34mhello worldjava:26)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n at io.harness.rule.HFailOnTimeout$CallableStatement.call(HFailOnTimeout.java:162)\n at io.harness.rule.HFailOnTimeout$CallableStatement.call(HFailOnTimeout.java:151)\n at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n at java.lang.Thread.run(Thread.java:748)\njava:26)\n at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n at java.lang.reflect.Method.invoke(Method.java:498)\n at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n at io.harness.rule.HFailOnTimeout$CallableStatement.call(HFailOnTimeout.java:162)\n at io.harness.rule.HFailOnTimeout$CallableStatement.call(HFailOnTimeout.java:151)\n at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n at java.lang.Thread.run(Thread.java:748)\n",
        "type": null,
        "desc": null
      },
      "duration_ms": 25368,
      "stdout": "\u001b[34mhello world06:48:52.055 &amp#27;[32m[main]&amp#27;[0;39m &amp#27;[34mINFO &amp#27;[0;39m &amp#27;[36mio.harness.testframework.framework.RequestSpecProvider&amp#27;[0;39m - Querying environment : https://localhost:9090/api \n06:48:52.120 &amp#27;[32m[main]&amp#27;[0;39m &amp#27;[34mINFO &amp#27;[0;39m &amp#27;[36mio.harness.rule.OwnerRule&amp#27;[0;39m - Developer abhinav.singh is found to be owner of intermittent test \n06:48:52.124 &amp#27;[32m[main]&amp#27;[0;39m &amp#27;[34mINFO &amp#27;[0;39m &amp#27;[36mio.harness.rule.OwnerRule&amp#8:52.055 &amp#27;[32m[main]&amp#27;[0;39m &amp#27;[34mINFO &amp#27;[0;39m &amp#27;[36mio.harness.testframework.framework.RequestSpecProvider&amp#27;[0;39m - Querying environment : https://localhost:9090/api \n06:48:52.120 &amp#27;[32m[main]&amp#27;[0;39m &amp#27;[34mINFO &amp#27;[0;39m &amp#27;[36mio.harness.rule.OwnerRule&amp#27;[0;39m - Developer abhinav.singh is found to be owner of intermittent test \n06:48:52.124 &amp#27;[32m[main]&amp#27;[0;39m &amp#27;[34mINFO &amp#27;[0;39m &amp#27;[36mio.harness.rule.OwnerRule&amp8:52.055 &amp#27;[32m[main]&amp#27;[0;39m &amp#27;[34mINFO &amp#27;[0;39m &amp#27;[36mio.harness.testframework.framework.RequestSpecProvider&amp#27;[0;39m - Querying environment : https://localhost:9090/api \n06:48:52.120 &amp#27;[32m[main]&amp#27;[0;39m &amp#27;[34mINFO &amp#27;[0;39m &amp#27;[36mio.harness.rule.OwnerRule&amp#27;[0;39m - Developer abhinav.singh is found to be owner of intermittent test \n06:48:52.124 &amp#27;[32m[main]&amp#27;[0;39m &amp#27;[34mINFO &amp#27;[0;39m &amp#27;[36mio.harness.rule.OwnerRule&amp27;[0;39m - Developer abhinav.singh is found to be owner of skipped test \n",
      "stderr": null
    },
    {
      "name": "testTriggerTimeSeriesAlertIfNecessary",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 10167,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testTriggerLogAnalysis_firstAnalysisAfterMoreThan2Hours",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 9046,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testShouldCollectData_noDataInThePastMonth",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 6329,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testLogsL1Clustering_duringBaselineWindow",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 6155,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testTriggerLogAnalysisAlertIfNecessary",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 6014,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testTriggerTimeSeriesAlertIfNecessary_numOccurrencesNotMet",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 5970,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testTriggerLogAnalysis_within2hourWindowWithBuffer",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 4445,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testTriggerLogAnalysis_firstAnalysisAfterBaseline",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 4258,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testLogsL2ClusteringRetryBackoff",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 3829,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testLogsDataCollectionAfter2Hours",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 3652,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testShouldCollectData_logsLessThan30MinSinceLastCollectionWithinBuffer",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 3623,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testLogsL2Clustering",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 3557,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testShouldCollectData_timeSeries",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 3553,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testCreateFeedbackAnalysisTaskCheckIfIs24x7FlagTrue",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 3315,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testDataCollectionFirstCollection",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 3118,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testTriggerTimeSeriesAnalysisHappyCaseWithExperiment",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 3008,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testCreateFeedbackAnalysisTask_noFeedbacks",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 2905,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testShouldCollectData_timeSeriesMoreThan30MinWithinBuffer",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 2888,
      "stdout": null,
      "stderr": null
    },
    {
      "name": "testTriggerTimeSeriesAlertIfNecessary_numOccurrencesMet",
      "class_name": "io.harness.service.ContinuousVerificationServiceTest",
      "suite_name": "io.harness.service.ContinuousVerificationServiceTest",
      "result": {
        "status": "passed",
        "message": null,
        "type": null,
        "desc": null
      },
      "duration_ms": 2862,
      "stdout": null,
      "stderr": null
    }
  ]
}
