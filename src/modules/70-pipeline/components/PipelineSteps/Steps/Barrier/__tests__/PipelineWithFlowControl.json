{
  "status": "SUCCESS",
  "data": {
    "yamlPipeline": "pipeline:\n    name: bar-pip\n    identifier: barpip\n    projectIdentifier: devil\n    orgIdentifier: testorg\n    tags: {}\n    stages:\n        - stage:\n              name: stage1\n              identifier: stage1\n              description: \"\"\n              type: Deployment\n              spec:\n                  serviceConfig:\n                      serviceDefinition:\n                          type: Kubernetes\n                          spec:\n                              manifestOverrideSets: []\n                              manifests: []\n                              artifacts:\n                                  sidecars: []\n                                  primary:\n                                      type: DockerRegistry\n                                      spec:\n                                          connectorRef: account.docker_heartbeat_test\n                                          imagePath: <+input>\n                                          tag: <+input>\n                      service:\n                          name: svc\n                          identifier: svc\n                  infrastructure:\n                      infrastructureDefinition:\n                          type: KubernetesDirect\n                          spec:\n                              connectorRef: account.TestK8s\n                              namespace: ns1\n                              releaseName: rs1\n                      allowSimultaneousDeployments: false\n                      infrastructureKey: infraNS\n                      environment:\n                          name: ok\n                          identifier: ok\n                          type: PreProduction\n                  execution:\n                      steps:\n                          - step:\n                                type: ShellScript\n                                name: foo\n                                identifier: foo\n                                spec:\n                                    shell: Bash\n                                    onDelegate: true\n                                    source:\n                                        type: Inline\n                                        spec:\n                                            script: echo \"foo\"\n                                    environmentVariables: []\n                                    outputVariables: []\n                                    executionTarget: {}\n                                timeout: 10m\n                          - step:\n                                type: Barrier\n                                name: barrr1\n                                identifier: barrr1\n                                spec:\n                                    barrierRef: barrier1\n                                timeout: 1m\n                          - step:\n                                type: ShellScript\n                                name: bar\n                                identifier: bar\n                                spec:\n                                    shell: Bash\n                                    onDelegate: true\n                                    source:\n                                        type: Inline\n                                        spec:\n                                            script: echo \"bar\"\n                                    environmentVariables: []\n                                    outputVariables: []\n                                    executionTarget: {}\n                                timeout: 10m\n                      rollbackSteps:\n                          - step:\n                                name: Rollback Rollout Deployment\n                                identifier: rollbackRolloutDeployment\n                                type: K8sRollingRollback\n                                timeout: 10m\n                                spec: {}\n              tags: {}\n              failureStrategies:\n                  - onFailure:\n                        errors:\n                            - AnyOther\n                        action:\n                            type: StageRollback\n        - stage:\n              name: stage2\n              identifier: stage2\n              description: \"\"\n              type: Deployment\n              spec:\n                  serviceConfig:\n                      serviceDefinition:\n                          type: Kubernetes\n                          spec:\n                              manifestOverrideSets: []\n                              manifests: []\n                              artifacts:\n                                  sidecars: []\n                                  primary:\n                                      type: Ecr\n                                      spec:\n                                          connectorRef: account.DheerajAwsTest\n                                          imagePath: <+input>\n                                          region: <+input>\n                                          tag: <+input>\n                      service:\n                          name: svc2\n                          identifier: svc2\n                  infrastructure:\n                      infrastructureDefinition:\n                          type: KubernetesDirect\n                          spec:\n                              connectorRef: account.TestK8s\n                              namespace: ns1\n                              releaseName: rs1\n                      allowSimultaneousDeployments: false\n                      infrastructureKey: \"\"\n                      environment:\n                          name: nfra2\n                          identifier: nfra2\n                          type: PreProduction\n                  execution:\n                      steps:\n                          - step:\n                                type: ShellScript\n                                name: foo\n                                identifier: foo\n                                spec:\n                                    shell: Bash\n                                    onDelegate: true\n                                    source:\n                                        type: Inline\n                                        spec:\n                                            script: echo \"foo\"\n                                    environmentVariables: []\n                                    outputVariables: []\n                                    executionTarget: {}\n                                timeout: 10m\n                          - step:\n                                type: Barrier\n                                name: barr2\n                                identifier: barr2\n                                spec:\n                                    barrierRef: barrier1\n                                timeout: 1m\n                          - step:\n                                type: ShellScript\n                                name: bar\n                                identifier: bar\n                                spec:\n                                    shell: Bash\n                                    onDelegate: true\n                                    source:\n                                        type: Inline\n                                        spec:\n                                            script: echo \"bar\"\n                                    environmentVariables: []\n                                    outputVariables: []\n                                    executionTarget: {}\n                                timeout: 10m\n                      rollbackSteps:\n                          - step:\n                                name: Rollback Rollout Deployment\n                                identifier: rollbackRolloutDeployment\n                                type: K8sRollingRollback\n                                timeout: 10m\n                                spec: {}\n              tags: {}\n              failureStrategies:\n                  - onFailure:\n                        errors:\n                            - AnyOther\n                        action:\n                            type: StageRollback\n    flowControl:\n        barriers:\n            - name: barrier1\n              identifier: barrier1\n",
    "version": 53,
    "gitDetails": { "objectId": null, "branch": null, "repoIdentifier": null, "rootFolder": null, "filePath": null }
  },
  "metaData": null,
  "correlationId": "36a36350-4900-4ba2-927a-6f3c818a1a25"
}
