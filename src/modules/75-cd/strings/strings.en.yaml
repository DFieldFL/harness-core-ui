allowSimultaneousDeployments: Allow simultaneous deployments on the same infrastructure
continuous: '{{$.common.purpose.cd.continuous}}'
learnMore: Learn more about Continuous Delivery
dashboard:
  subHeading: Let Harness take your software release process to the next level with Continuous Delivery
  createProject: '{{$.projectsOrgs.createProject}}'
  orSelectExisting: '{{$.orSelectExisting}}'
steps:
  common:
    clusterDetails: Cluster Details
    selectOrEnterClusterPlaceholder: Select or add cluster
    releaseNamePlaceholder: Enter Release Name
  kubernetesGcpStep:
    stepName: Specify your GCP Connector
folderPath: Folder Path
filePathPlaceholder: 'Enter path within manifest folder'
resourceCannotBeEmpty: 'Resource cannot be empty'
manifestPathsCannotBeEmpty: 'Manifest Paths cannot be empty'
scriptRequired: Script is a required field
workloadRequired: Workload is a required field
stepName: Step Name
serviceCreated: Service created successfully
serviceUpdated: Service updated successfully
environmentCreated: Environment created successfully
environmentUpdated: Environment updated successfully
namespaceValidation: Namespace must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc')
releaseNameValidation: Release name must consist of lowercase alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. http://example.com). Harness evaluates the release name using the regex [a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*
cdTrialHomePage:
  startTrial:
    description: Take your software build processes to the next level using our Harness Continuous Delivery.
    startBtn:
      description: Start 14 day CD Enterprise trial
createOrSelectProject: CD Create Or Select Project Placeholder
chooseProvisionerText: What type of provisioner do you want to use?
setUpProvisionerBtnText: Set Up Provisioner

filePathRequired: Atleast one file path is required
pathCannotBeEmpty: File Path cannot be empty
configFilePlaceHolder: 'Specify Config File'

configIdentifer: Configuration Identifier
addInline: Add Inline
addRemote: Add Remote
tfVarStore: Terraform Var Store
varFileDetails: Var File Details
varFile: Var File
backEndConfig: Backend Configuration
gitFetchTypeRequired: Git Fetch Type Required
contentRequired: Content is required
specifyTfVarStore: Specify Terraform Var File Store
addTFVarFileLabel: 'Add File Path'
configurationFile: 'Configuration File Repository'
terraformVarFiles: 'Terraform Var Files'
secretManagerRequired: 'Secret Manager is required.'
pipelineSteps:
  serviceTab:
    propateStage: Stage is required
    overrideChanges: Override artifacts, manifests, service variables for this stage
    deploymentTypeRequired: Deployment type selection is required
  infraTab:
    deploymentType: Infrastructure type selection is required
cdLaunchText: Launch CD First Generation
