diff --git a/node_modules/@projectstorm/react-canvas-core/dist/core-actions/ActionEventBus.js b/node_modules/@projectstorm/react-canvas-core/dist/core-actions/ActionEventBus.js
index 3bc5cb0..2064095 100644
--- a/node_modules/@projectstorm/react-canvas-core/dist/core-actions/ActionEventBus.js
+++ b/node_modules/@projectstorm/react-canvas-core/dist/core-actions/ActionEventBus.js
@@ -44,12 +44,12 @@ class ActionEventBus {
         }
         else if (event.type === 'keydown') {
             // store the recorded key
-            this.keys[event.key.toLowerCase()] = true;
+            this.keys[event.key ? event.key.toLowerCase() : 'Unidentified'] = true;
             return this.getActionsForType(Action_1.InputType.KEY_DOWN);
         }
         else if (event.type === 'keyup') {
             // delete the recorded key
-            delete this.keys[event.key.toLowerCase()];
+            delete this.keys[event.key ? event.key.toLowerCase() : 'Unidentified'];
             return this.getActionsForType(Action_1.InputType.KEY_UP);
         }
         else if (event.type === 'mousemove') {
diff --git a/node_modules/@projectstorm/react-canvas-core/src/states/SelectionBoxState.ts b/node_modules/@projectstorm/react-canvas-core/src/states/SelectionBoxState.ts
index 5fa86cb..b59889b 100644
--- a/node_modules/@projectstorm/react-canvas-core/src/states/SelectionBoxState.ts
+++ b/node_modules/@projectstorm/react-canvas-core/src/states/SelectionBoxState.ts
@@ -36,12 +36,12 @@ export class SelectionBoxState extends AbstractDisplacementState {
 		}
 
 		return {
-			left: rel.x > this.initialXRelative ? this.initialXRelative : rel.x,
-			top: rel.y > this.initialYRelative ? this.initialYRelative : rel.y,
-			width: Math.abs(rel.x - this.initialXRelative),
-			height: Math.abs(rel.y - this.initialYRelative),
-			right: rel.x < this.initialXRelative ? this.initialXRelative : rel.x,
-			bottom: rel.y < this.initialYRelative ? this.initialYRelative : rel.y
+			left: rel?.x > this.initialXRelative ? this.initialXRelative : rel?.x,
+			top: rel?.y > this.initialYRelative ? this.initialYRelative : rel?.y,
+			width: Math.abs(rel?.x - this.initialXRelative),
+			height: Math.abs(rel?.y - this.initialYRelative),
+			right: rel?.x < this.initialXRelative ? this.initialXRelative : rel?.x,
+			bottom: rel?.y < this.initialYRelative ? this.initialYRelative : rel?.y
 		};
 	}
 
